{"ast":null,"code":"var _jsxFileName = \"/home/dan/Documents/projectv2/client/src/components/SignIn.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport Cookies from 'universal-cookie'; // secondary container, contains background\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar SignInInputs = {\n  flex: \"1\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  background: \"lightblue\",\n  padding: \"6rem\",\n  justifyContent: \"center\"\n}; // Main container for this page\n\nvar SignInContainerStyle = {\n  minHeight: \"100vh\",\n  display: \"flex\",\n  flexDirection: \"row\"\n}; // style for the box fields are contained within\n\nvar SignUpText = {\n  display: \"flex\",\n  padding: \"24px\",\n  borderRadius: \"10px\",\n  background: \"white\",\n  flexDirection: \"column\"\n}; // style for the text of the switch button\n\nvar buttonColor = {\n  color: \"blue\",\n  cursor: \"pointer\"\n}; // style for the button wrapper\n\nvar buttonHolderStyle = {\n  marginTop: \"2rem\",\n  display: \"flex\",\n  justifyContent: \"flex-start\"\n}; //style for sign in/ sign up buton\n\nvar buttonStyle = {\n  borderRadius: \"4px\",\n  background: \"#000000\",\n  border: \"1px solid #005fff\",\n  color: \"#fff\",\n  fontWeight: \"500\",\n  padding: \" 0.5rem 1.1rem\",\n  cursor: \"pointer\",\n  transition: \"0.3s ease\"\n};\nvar initialFields = {\n  fullName: '',\n  username: '',\n  password: '',\n  confirmPassword: ''\n}; //get our cookies instance\n\nconst cookies = new Cookies();\n\nfunction SignIn() {\n  _s();\n\n  // fields of the sign in/up form saved as a use state to send to the server\n  const [fields, setFields] = useState(false);\n  const [signIn, setSignIn] = useState(false); //If we hit the mode change button, we change modes (signin/signup)\n\n  function nextMode() {\n    setSignIn(!signIn);\n  } // If we detect that something has changed in one of the inputs, we pass all the previous fields to fields usestate, \n  //and then we set the specifc fields of the input that was changed to the new detected value. \n\n\n  function detectChange(e) {\n    setFields({ ...fields,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const {\n      fullName,\n      username,\n      password\n    } = fields;\n    const URL = \"http://localhost:4000/form\";\n    const {\n      data: {\n        token,\n        userId,\n        hashedPassword\n      }\n    } = await axios.post(`${URL}/${signIn ? 'signin' : 'register'}`, {\n      username,\n      password,\n      fullName\n    });\n    cookies.set('token', token);\n    cookies.set('username', username);\n    cookies.set('fullName', fullName);\n    cookies.set('userId', userId);\n\n    if (!signIn) {\n      cookies.set('hashedPassword', hashedPassword);\n    } //after cookies have been set, we reload the window\n\n\n    window.location.reload();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: SignInContainerStyle,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: SignInInputs,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: SignUpText,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: signIn ? 'Sign In Here:' : 'Sign Up Here:'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [!signIn && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input_field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"fullName\",\n              children: \"Full Name \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"fullName\",\n              onChange: detectChange,\n              type: \"text\",\n              placeholder: \"Insert Full Name\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input_field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"UserName \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"username\",\n              onChange: detectChange,\n              type: \"text\",\n              placeholder: \"Insert username\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input_field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"password\",\n              onChange: detectChange,\n              type: \"password\",\n              placeholder: \"Insert password here\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 29\n          }, this), !signIn && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input_field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"confirmPassword\",\n              children: \"Confirm Password \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"confirmPassword\",\n              onChange: detectChange,\n              type: \"password\",\n              placeholder: \"confirm_password\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: buttonHolderStyle,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              style: buttonStyle,\n              children: !signIn ? \"Sign Up!\" : \"Sign In!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [signIn ? \"Go to Sign Up Page:\" : \"Go to Sign In Page:\", /*#__PURE__*/_jsxDEV(\"div\", {\n              style: buttonColor,\n              onClick: nextMode,\n              children: signIn ? 'Sign Up' : 'Sign In'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SignIn, \"ovQfcmR6GY4aWWTS6BuZ5brcyaE=\");\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/home/dan/Documents/projectv2/client/src/components/SignIn.jsx"],"names":["React","useState","axios","Cookies","SignInInputs","flex","display","flexDirection","background","padding","justifyContent","SignInContainerStyle","minHeight","SignUpText","borderRadius","buttonColor","color","cursor","buttonHolderStyle","marginTop","buttonStyle","border","fontWeight","transition","initialFields","fullName","username","password","confirmPassword","cookies","SignIn","fields","setFields","signIn","setSignIn","nextMode","detectChange","e","target","name","value","handleSubmit","preventDefault","URL","data","token","userId","hashedPassword","post","set","window","location","reload"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB,C,CAEA;;;AACA,IAAIC,YAAY,GAAG;AACfC,EAAAA,IAAI,EAAE,GADS;AAEfC,EAAAA,OAAO,EAAE,MAFM;AAGfC,EAAAA,aAAa,EAAE,QAHA;AAIfC,EAAAA,UAAU,EAAE,WAJG;AAKfC,EAAAA,OAAO,EAAE,MALM;AAMfC,EAAAA,cAAc,EAAE;AAND,CAAnB,C,CASE;;AACF,IAAIC,oBAAoB,GAAG;AACvBC,EAAAA,SAAS,EAAE,OADY;AAEvBN,EAAAA,OAAO,EAAE,MAFc;AAGvBC,EAAAA,aAAa,EAAE;AAHQ,CAA3B,C,CAKA;;AACE,IAAIM,UAAU,GAAG;AACfP,EAAAA,OAAO,EAAE,MADM;AAEfG,EAAAA,OAAO,EAAE,MAFM;AAGfK,EAAAA,YAAY,EAAE,MAHC;AAIfN,EAAAA,UAAU,EAAE,OAJG;AAKfD,EAAAA,aAAa,EAAE;AALA,CAAjB,C,CAUF;;AACE,IAAIQ,WAAW,GAAG;AACdC,EAAAA,KAAK,EAAG,MADM;AAEdC,EAAAA,MAAM,EAAE;AAFM,CAAlB,C,CAIF;;AACE,IAAIC,iBAAiB,GAAE;AACrBC,EAAAA,SAAS,EAAE,MADU;AAErBb,EAAAA,OAAO,EAAE,MAFY;AAGrBI,EAAAA,cAAc,EAAE;AAHK,CAAvB,C,CAMA;;AACA,IAAIU,WAAW,GAAC;AACdN,EAAAA,YAAY,EAAE,KADA;AAEdN,EAAAA,UAAU,EAAE,SAFE;AAGda,EAAAA,MAAM,EAAE,mBAHM;AAIdL,EAAAA,KAAK,EAAE,MAJO;AAKdM,EAAAA,UAAU,EAAE,KALE;AAMdb,EAAAA,OAAO,EAAC,gBANM;AAOdQ,EAAAA,MAAM,EAAE,SAPM;AAQdM,EAAAA,UAAU,EAAE;AARE,CAAhB;AAWA,IAAIC,aAAa,GAAG;AAClBC,EAAAA,QAAQ,EAAE,EADQ;AAElBC,EAAAA,QAAQ,EAAE,EAFQ;AAGlBC,EAAAA,QAAQ,EAAE,EAHQ;AAIlBC,EAAAA,eAAe,EAAC;AAJE,CAApB,C,CAMF;;AACA,MAAMC,OAAO,GAAG,IAAI1B,OAAJ,EAAhB;;AAEA,SAAS2B,MAAT,GAAkB;AAAA;;AAClB;AACI,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsB/B,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACgC,MAAD,EAASC,SAAT,IAAsBjC,QAAQ,CAAC,KAAD,CAApC,CAHc,CAIlB;;AACI,WAASkC,QAAT,GAAmB;AACfD,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACH,GAPa,CAQlB;AACA;;;AACI,WAASG,YAAT,CAAsBC,CAAtB,EAAwB;AACpBL,IAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAY,OAACM,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAAtC,KAAD,CAAT;AAEH;;AACD,iBAAeC,YAAf,CAA4BJ,CAA5B,EAA8B;AAC1BA,IAAAA,CAAC,CAACK,cAAF;AAEA,UAAM;AAACjB,MAAAA,QAAD;AAAWC,MAAAA,QAAX;AAAqBC,MAAAA;AAArB,QAAiCI,MAAvC;AACA,UAAMY,GAAG,GAAE,4BAAX;AACA,UAAM;AAAEC,MAAAA,IAAI,EAAE;AAACC,QAAAA,KAAD;AAAQC,QAAAA,MAAR;AAAgBC,QAAAA;AAAhB;AAAR,QAA4C,MAAM7C,KAAK,CAAC8C,IAAN,CAAY,GAAEL,GAAI,IAAGV,MAAM,GAAG,QAAH,GAAc,UAAW,EAApD,EAAsD;AAC1GP,MAAAA,QAD0G;AAChGC,MAAAA,QADgG;AACtFF,MAAAA;AADsF,KAAtD,CAAxD;AAGAI,IAAAA,OAAO,CAACoB,GAAR,CAAY,OAAZ,EAAqBJ,KAArB;AACAhB,IAAAA,OAAO,CAACoB,GAAR,CAAY,UAAZ,EAAwBvB,QAAxB;AACAG,IAAAA,OAAO,CAACoB,GAAR,CAAY,UAAZ,EAAwBxB,QAAxB;AACAI,IAAAA,OAAO,CAACoB,GAAR,CAAY,QAAZ,EAAsBH,MAAtB;;AAEA,QAAG,CAACb,MAAJ,EAAW;AACPJ,MAAAA,OAAO,CAACoB,GAAR,CAAY,gBAAZ,EAA8BF,cAA9B;AACH,KAfyB,CAgB1B;;;AACAG,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AAEH;;AAED,sBACI;AAAK,IAAA,KAAK,EAAEzC,oBAAZ;AAAA,2BACI;AAAK,MAAA,KAAK,EAAEP,YAAZ;AAAA,6BACI;AAAG,QAAA,KAAK,EAAES,UAAV;AAAA,gCACI;AAAA,oBAAKoB,MAAM,GAAG,eAAH,GAAqB;AAAhC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAM,UAAA,QAAQ,EAAEQ,YAAhB;AAAA,qBACK,CAACR,MAAD,iBACG;AAAK,YAAA,SAAS,EAAE,aAAhB;AAAA,oCACI;AAAO,cAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AACI,cAAA,IAAI,EAAC,UADT;AAEI,cAAA,QAAQ,EAAEG,YAFd;AAGI,cAAA,IAAI,EAAC,MAHT;AAII,cAAA,WAAW,EAAC,kBAJhB;AAKI,cAAA,QAAQ;AALZ;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFR,eAcQ;AAAK,YAAA,SAAS,EAAE,aAAhB;AAAA,oCACI;AAAO,cAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AACI,cAAA,IAAI,EAAC,UADT;AAEI,cAAA,QAAQ,EAAEA,YAFd;AAGI,cAAA,IAAI,EAAC,MAHT;AAII,cAAA,WAAW,EAAC,iBAJhB;AAKI,cAAA,QAAQ;AALZ;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdR,eAwBQ;AAAK,YAAA,SAAS,EAAE,aAAhB;AAAA,oCACI;AAAO,cAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AACI,cAAA,IAAI,EAAC,UADT;AAEI,cAAA,QAAQ,EAAEA,YAFd;AAGI,cAAA,IAAI,EAAC,UAHT;AAII,cAAA,WAAW,EAAC,sBAJhB;AAKI,cAAA,QAAQ;AALZ;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAxBR,EAkCS,CAACH,MAAD,iBACD;AAAK,YAAA,SAAS,EAAE,aAAhB;AAAA,oCACI;AAAO,cAAA,OAAO,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AACI,cAAA,IAAI,EAAC,iBADT;AAEI,cAAA,QAAQ,EAAEG,YAFd;AAGI,cAAA,IAAI,EAAC,UAHT;AAII,cAAA,WAAW,EAAC,kBAJhB;AAKI,cAAA,QAAQ;AALZ;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnCR,eA8CI;AAAK,YAAA,KAAK,EAAIlB,iBAAd;AAAA,mCACI;AAAQ,cAAA,KAAK,EAAIE,WAAjB;AAAA,wBACK,CAACa,MAAD,GAAU,UAAV,GAAuB;AAD5B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBA9CJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAuDI;AAAA,iCACI;AAAA,uBACKA,MAAM,GAAG,qBAAH,GAA2B,qBADtC,eAEI;AAAK,cAAA,KAAK,EAAGlB,WAAb;AAAyB,cAAA,OAAO,EAAEoB,QAAlC;AAAA,wBACKF,MAAM,GAAG,SAAH,GAAe;AAD1B;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAvDJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAsEH;;GAzGQH,M;;KAAAA,M;AA2GT,eAAeA,MAAf","sourcesContent":["import React from 'react'\nimport {useState} from 'react'\nimport axios from 'axios'\nimport Cookies from 'universal-cookie'\n\n// secondary container, contains background\nvar SignInInputs = {\n    flex: \"1\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    background: \"lightblue\",  \n    padding: \"6rem\",\n    justifyContent: \"center\"\n  }\n\n  // Main container for this page\nvar SignInContainerStyle = {\n    minHeight: \"100vh\",\n    display: \"flex\",\n    flexDirection: \"row\"\n  };\n// style for the box fields are contained within\n  var SignUpText = {\n    display: \"flex\",\n    padding: \"24px\",\n    borderRadius: \"10px\",\n    background: \"white\",\n    flexDirection: \"column\"\n\n  }\n\n\n// style for the text of the switch button\n  var buttonColor = {\n      color : \"blue\",\n      cursor: \"pointer\"\n  }\n// style for the button wrapper\n  var buttonHolderStyle= {\n    marginTop: \"2rem\",\n    display: \"flex\",\n    justifyContent: \"flex-start\"\n  }\n  \n  //style for sign in/ sign up buton\n  var buttonStyle={\n    borderRadius: \"4px\",\n    background: \"#000000\",\n    border: \"1px solid #005fff\",\n    color: \"#fff\",\n    fontWeight: \"500\",\n    padding:\" 0.5rem 1.1rem\",\n    cursor: \"pointer\",\n    transition: \"0.3s ease\"\n  }\n\n  var initialFields = {\n    fullName: '',\n    username: '',\n    password: '',\n    confirmPassword:''\n}\n//get our cookies instance\nconst cookies = new Cookies();\n\nfunction SignIn() {\n// fields of the sign in/up form saved as a use state to send to the server\n    const [fields, setFields] = useState(false);\n    const [signIn, setSignIn] = useState(false);\n//If we hit the mode change button, we change modes (signin/signup)\n    function nextMode(){\n        setSignIn(!signIn)\n    }\n// If we detect that something has changed in one of the inputs, we pass all the previous fields to fields usestate, \n//and then we set the specifc fields of the input that was changed to the new detected value. \n    function detectChange(e){\n        setFields({...fields, [e.target.name]: e.target.value })\n\n    }\n    async function handleSubmit(e){\n        e.preventDefault();\n\n        const {fullName, username, password} = fields\n        const URL =\"http://localhost:4000/form\";\n        const { data: {token, userId, hashedPassword} } = await axios.post(`${URL}/${signIn ? 'signin' : 'register'}`,{\n            username, password, fullName\n        })\n        cookies.set('token', token)\n        cookies.set('username', username)\n        cookies.set('fullName', fullName)\n        cookies.set('userId', userId)\n\n        if(!signIn){\n            cookies.set('hashedPassword', hashedPassword)   \n        }\n        //after cookies have been set, we reload the window\n        window.location.reload();\n\n    }\n\n    return (\n        <div style={SignInContainerStyle}>\n            <div style={SignInInputs}>\n                <p style={SignUpText}> \n                    <h2>{signIn ? 'Sign In Here:' : 'Sign Up Here:'}</h2>\n                    <form onSubmit={handleSubmit}>\n                        {!signIn && (\n                            <div className= \"input_field\">\n                                <label htmlFor=\"fullName\">Full Name </label>\n                                <input\n                                    name=\"fullName\"\n                                    onChange={detectChange}\n                                    type=\"text\"\n                                    placeholder=\"Insert Full Name\"\n                                    required\n                                />\n                            </div>\n                        )}\n\n                            <div className= \"input_field\">\n                                <label htmlFor=\"username\">UserName </label>\n                                <input\n                                    name=\"username\"\n                                    onChange={detectChange}\n                                    type=\"text\"\n                                    placeholder=\"Insert username\"\n                                    required\n                                />\n                            </div>\n                            <div className= \"input_field\">\n                                <label htmlFor=\"password\">Password </label>\n                                <input\n                                    name=\"password\"\n                                    onChange={detectChange}\n                                    type=\"password\"\n                                    placeholder=\"Insert password here\"\n                                    required\n                                />\n                            </div>\n                            {!signIn && (\n                            <div className= \"input_field\">\n                                <label htmlFor=\"confirmPassword\">Confirm Password </label>\n                                <input\n                                    name=\"confirmPassword\"\n                                    onChange={detectChange}\n                                    type=\"password\"\n                                    placeholder=\"confirm_password\"\n                                    required\n                                />\n                            </div>\n                        )}\n                        <div style = {buttonHolderStyle}>\n                            <button style = {buttonStyle}>\n                                {!signIn ? \"Sign Up!\" : \"Sign In!\"}\n                            </button>\n                            \n                        </div>\n                    </form>\n                    <div >\n                        <p>\n                            {signIn ? \"Go to Sign Up Page:\" : \"Go to Sign In Page:\"}\n                            <div style ={buttonColor}onClick={nextMode}>\n                                {signIn ? 'Sign Up' : 'Sign In'}\n                            </div>\n                        </p>\n                    </div>\n                </p>\n            </div>\n        </div>\n    )\n}\n\nexport default SignIn\n"]},"metadata":{},"sourceType":"module"}