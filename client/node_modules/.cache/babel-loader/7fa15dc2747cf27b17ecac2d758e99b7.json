{"ast":null,"code":"var _jsxFileName = \"/home/dan/Documents/Untitled Folder/361Project1-master/client/src/components/ChatPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useChatContext } from \"stream-chat-react\";\nimport { Channel } from \"stream-chat-react\";\nimport CreateChannel from './CreateChannel';\nimport ChannelOptions from './ChannelOptions';\nimport TeamMessage from './TeamMessage';\nimport ChannelInner from './ChannelInner'; // style for main chat page container for all states\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar channelStyle = {\n  height: \"100%\",\n  width: \"100%\"\n}; //CHat page component function, has various state change props\n\nfunction ChatPage({\n  newChannel,\n  openOptions,\n  setNewChannel,\n  setOpenOptions,\n  createType\n}) {\n  _s();\n\n  //get channel from context\n  const {\n    channel\n  } = useChatContext(); //if new channel, return the createChannel component\n\n  if (newChannel) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: channelStyle,\n      children: /*#__PURE__*/_jsxDEV(CreateChannel, {\n        createType: createType,\n        setNewChannel: setNewChannel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  } //if the option state is true, open the options component, pass it the function so we can close menu later\n\n\n  if (openOptions) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: channelStyle,\n      children: /*#__PURE__*/_jsxDEV(ChannelOptions, {\n        setOpenOptions: setOpenOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  } // Set up chat page, messages for message list provided by message props passed into Built team message\n  // component. Tell stream chat how to hanlde no states, and messages. Then render the actual chat page (channel inner)\n  // pass the options state function so we can put an option button in the header\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: channelStyle,\n    children: /*#__PURE__*/_jsxDEV(Channel, {\n      Message: (messageProps, i) => /*#__PURE__*/_jsxDEV(TeamMessage, { ...messageProps\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(ChannelInner, {\n        setOpenOptions: setOpenOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChatPage, \"Y8G6UshdUXxX4l0KFZoPlRCuJ9A=\", false, function () {\n  return [useChatContext];\n});\n\n_c = ChatPage;\nexport default ChatPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"sources":["/home/dan/Documents/Untitled Folder/361Project1-master/client/src/components/ChatPage.jsx"],"names":["React","useChatContext","Channel","CreateChannel","ChannelOptions","TeamMessage","ChannelInner","channelStyle","height","width","ChatPage","newChannel","openOptions","setNewChannel","setOpenOptions","createType","channel","messageProps","i"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,cAAR,QAA6B,mBAA7B;AACA,SAAQC,OAAR,QAAsB,mBAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB,C,CAEA;;;AACA,IAAIC,YAAY,GAAG;AACfC,EAAAA,MAAM,EAAE,MADO;AAEfC,EAAAA,KAAK,EAAE;AAFQ,CAAnB,C,CAKA;;AACA,SAASC,QAAT,CACI;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,WAAd;AAA2BC,EAAAA,aAA3B;AAA0CC,EAAAA,cAA1C;AAA0DC,EAAAA;AAA1D,CADJ,EAEM;AAAA;;AACE;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAcf,cAAc,EAAlC,CAFE,CAGN;;AACI,MAAGU,UAAH,EAAc;AACV,wBACI;AAAK,MAAA,KAAK,EAAEJ,YAAZ;AAAA,6BACI,QAAC,aAAD;AAAe,QAAA,UAAU,EAAEQ,UAA3B;AACA,QAAA,aAAa,EAAEF;AADf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH,GAXC,CAYN;;;AACI,MAAGD,WAAH,EAAe;AACX,wBACI;AAAK,MAAA,KAAK,EAAEL,YAAZ;AAAA,6BACI,QAAC,cAAD;AACA,QAAA,cAAc,EAAEO;AADhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH,GApBC,CAsBE;AACA;AACA;;;AACJ,sBACI;AAAK,IAAA,KAAK,EAAEP,YAAZ;AAAA,2BACI,QAAC,OAAD;AAAS,MAAA,OAAO,EAAE,CAACU,YAAD,EAAeC,CAAf,kBACd,QAAC,WAAD,OAAyBD;AAAzB,SAAkBC,CAAlB;AAAA;AAAA;AAAA;AAAA,cADJ;AAAA,6BAEA,QAAC,YAAD;AAAc,QAAA,cAAc,EAAEJ;AAA9B;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAnCQJ,Q;UAIeT,c;;;KAJfS,Q;AAqCT,eAAeA,QAAf","sourcesContent":["import React from 'react'\nimport {useChatContext} from \"stream-chat-react\"\nimport {Channel} from \"stream-chat-react\"\nimport CreateChannel from './CreateChannel';\nimport ChannelOptions from './ChannelOptions';\nimport TeamMessage from './TeamMessage';\nimport ChannelInner from './ChannelInner';\n\n// style for main chat page container for all states\nvar channelStyle = {\n    height: \"100%\",\n    width: \"100%\",\n  };\n\n//CHat page component function, has various state change props\nfunction ChatPage(\n    { newChannel, openOptions, setNewChannel, setOpenOptions, createType }\n    ) {\n        //get channel from context\n    const { channel } = useChatContext();\n//if new channel, return the createChannel component\n    if(newChannel){\n        return(\n            <div style={channelStyle}>\n                <CreateChannel createType={createType} \n                setNewChannel={setNewChannel} />\n            </div>\n        )\n    }\n//if the option state is true, open the options component, pass it the function so we can close menu later\n    if(openOptions){\n        return(\n            <div style={channelStyle}>\n                <ChannelOptions \n                setOpenOptions={setOpenOptions}/>\n            </div>\n        )\n    }\n\n        // Set up chat page, messages for message list provided by message props passed into Built team message\n        // component. Tell stream chat how to hanlde no states, and messages. Then render the actual chat page (channel inner)\n        // pass the options state function so we can put an option button in the header\n    return (\n        <div style={channelStyle}>\n            <Channel Message={(messageProps, i) => \n                <TeamMessage key={i} {...messageProps} />} >\n            <ChannelInner setOpenOptions={setOpenOptions} />\n            </Channel >\n        </div>\n    )\n}\n\nexport default ChatPage\n"]},"metadata":{},"sourceType":"module"}