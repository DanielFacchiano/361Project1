{"ast":null,"code":"var _jsxFileName = \"/home/dan/Documents/projectv2/front/src/components/PreList.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useChatContext } from 'stream-chat-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PreList({\n  channel,\n  type\n}) {\n  _s();\n\n  var {\n    channel: activeChannel,\n    client\n  } = useChatContext();\n\n  function groupPreface() {\n    var _channel$data;\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"# \", channel === null || channel === void 0 ? void 0 : (_channel$data = channel.data) === null || _channel$data === void 0 ? void 0 : _channel$data.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this);\n  }\n\n  function previewList() {\n    var mems = Object.values(channel.state.members).filter(({\n      user\n    }) => user.id != client.userID);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: members\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PreList, \"gmo4RLxjNtlaoEZKa8UBQMUI4ro=\", false, function () {\n  return [useChatContext];\n});\n\n_c = PreList;\nexport default PreList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PreList\");","map":{"version":3,"sources":["/home/dan/Documents/projectv2/front/src/components/PreList.jsx"],"names":["React","useChatContext","PreList","channel","type","activeChannel","client","groupPreface","data","name","previewList","mems","Object","values","state","members","filter","user","id","userID"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,cAAR,QAA6B,mBAA7B;;;AAGA,SAASC,OAAT,CAAiB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAjB,EAAoC;AAAA;;AAChC,MAAI;AAACD,IAAAA,OAAO,EAAEE,aAAV;AAAyBC,IAAAA;AAAzB,MAAmCL,cAAc,EAArD;;AAEA,WAASM,YAAT,GAAuB;AAAA;;AACnB,wBACI;AAAA,uBACOJ,OADP,aACOA,OADP,wCACOA,OAAO,CAAEK,IADhB,kDACO,cAAeC,IADtB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AACD,WAASC,WAAT,GAAsB;AAClB,QAAIC,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAcV,OAAO,CAACW,KAAR,CAAcC,OAA5B,EAAqCC,MAArC,CAA4C,CAAC;AAACC,MAAAA;AAAD,KAAD,KAAWA,IAAI,CAACC,EAAL,IAAWZ,MAAM,CAACa,MAAzE,CAAX;AACA,wBACI;AAAA,6BACI;AAAA,kBAAIJ;AAAJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAED,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAxBQb,O;UACkCD,c;;;KADlCC,O;AA0BT,eAAeA,OAAf","sourcesContent":["import React from 'react'\nimport {useChatContext} from 'stream-chat-react'\n\n\nfunction PreList({ channel, type }) {\n    var {channel: activeChannel, client } =useChatContext();\n\n    function groupPreface(){\n        return(\n            <div>\n                # {channel?.data?.name}\n            </div>\n        )\n    }\n    function previewList(){\n        var mems = Object.values(channel.state.members).filter(({user})=> user.id != client.userID);\n        return (\n            <div>\n                <p>{members}</p>\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            \n        </div>\n    )\n}\n\nexport default PreList\n"]},"metadata":{},"sourceType":"module"}