{"ast":null,"code":"var _jsxFileName = \"/home/dan/Documents/projectv2/front/src/components/UserList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useChatChannel, useChatContext } from 'stream-chat-react'; // Column flex box\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar channelStyle = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  height: \"100%\"\n};\nvar headerStyle = {\n  display: \"flex\",\n  alignItems: \"center\",\n  margin: \"0px 20px\",\n  justifyContent: \"space-between\"\n};\nvar ListItemUserWrapper = {\n  display: \"flex\",\n  alignItems: \"center\",\n  margin: \"0px 20px\",\n  justifyContent: \"space-between\"\n};\nvar ListItemUserWrapperName = {\n  display: \"flex\",\n  alignItems: \"center\",\n  flex: \"2\",\n  textAlign: \"left\"\n};\n\nfunction MasterList({\n  children\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: channelStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: headerStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Members\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Group Invite\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_c = MasterList;\n\nfunction ListItemUser({\n  user\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: ListItemUserWrapper,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: ListItemUserWrapperName,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: user.name || user.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = ListItemUser;\n\nfunction UserList() {\n  _s();\n\n  const {\n    client\n  } = useChatContext();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [empty, setEmpty] = useState(false);\n  useEffect(() => {\n    const getUsers = async () => {\n      if (loading) return; //If we are already getting the lost, don't keep trying to get it\n      //loading set to true for the try catch block, where we query users from stream chat \n\n      setLoading(true); //Async call to the stream chat client, filter out our own user, set range of users\n\n      try {\n        const response = await client.queryUsers({\n          id: {\n            $ne: client.userID\n          }\n        }, // query users from stream chats current context, exclude the logged in user\n        {\n          id: 1\n        }, {\n          limit: 10\n        }); //If response has entries, set users array to the response or set empty flag as true\n\n        if (response.users.length) {\n          setUsers(response.users);\n        } else {\n          setEmpty(true);\n        }\n      } catch (error) {\n        console.log(\"issue\");\n      }\n\n      setLoading(false); // We have finished retreiving the user list into the use states \n    };\n\n    if (client) getUsers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(MasterList, {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading Invitation Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this) : users === null || users === void 0 ? void 0 : users.map((user, i) => /*#__PURE__*/_jsxDEV(ListItemUser, {\n      index: i,\n      user: user\n    }, user.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserList, \"Smfy0Eq/sGnCplH3UIH4NnrM8LA=\", false, function () {\n  return [useChatContext];\n});\n\n_c3 = UserList;\nexport default UserList;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"MasterList\");\n$RefreshReg$(_c2, \"ListItemUser\");\n$RefreshReg$(_c3, \"UserList\");","map":{"version":3,"sources":["/home/dan/Documents/projectv2/front/src/components/UserList.jsx"],"names":["React","useEffect","useState","useChatChannel","useChatContext","channelStyle","display","flexDirection","height","headerStyle","alignItems","margin","justifyContent","ListItemUserWrapper","ListItemUserWrapperName","flex","textAlign","MasterList","children","ListItemUser","user","name","id","UserList","client","users","setUsers","loading","setLoading","empty","setEmpty","getUsers","response","queryUsers","$ne","userID","limit","length","error","console","log","map","i"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {useChatChannel, useChatContext} from 'stream-chat-react'\n\n// Column flex box\nvar channelStyle = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"100%\"\n  };\n\n  var headerStyle={\n    display: \"flex\",\n    alignItems: \"center\",\n    margin: \"0px 20px\",\n    justifyContent: \"space-between\"\n  };\n\n\n  var ListItemUserWrapper={\n    display: \"flex\",\n    alignItems: \"center\",\n    margin: \"0px 20px\",\n    justifyContent: \"space-between\"\n  };\n\n  var ListItemUserWrapperName={\n    display: \"flex\",\n    alignItems: \"center\",\n    flex: \"2\",\n    textAlign: \"left\"\n  };\n\n\n\n\nfunction MasterList({ children }){\n    return(\n        <div style={channelStyle}>\n            <div style={headerStyle}>\n                <p>Members</p>\n                <p>Group Invite</p>\n            </div>\n            {children}\n        </div>\n    )\n}\n\n\nfunction ListItemUser({ user}){\n    return(\n        <div style={ListItemUserWrapper}>\n            <div style={ListItemUserWrapperName}>\n                <p>\n                    {user.name || user.id}\n                </p>\n            </div>\n\n        </div>\n    )\n}\n\n\nfunction UserList(){ \n    \n    const {client} = useChatContext()\n    const [users, setUsers] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [empty, setEmpty] = useState(false);\n  \n\n\n    useEffect(()=> {\n        const getUsers = async () => {\n            if(loading) return //If we are already getting the lost, don't keep trying to get it\n            //loading set to true for the try catch block, where we query users from stream chat \n            setLoading(true) \n            //Async call to the stream chat client, filter out our own user, set range of users\n            try {\n                const response = await client.queryUsers(\n                    {id: {$ne :client.userID}}, // query users from stream chats current context, exclude the logged in user\n                    {id : 1},\n                    {limit: 10}\n                );\n                    //If response has entries, set users array to the response or set empty flag as true\n                if(response.users.length) {\n                    setUsers(response.users)\n                } else {\n                    setEmpty(true)\n                }\n            } catch (error) {\n                console.log(\"issue\")\n\n            }\n            setLoading(false) // We have finished retreiving the user list into the use states \n        }\n\n        if(client) getUsers()\n\n    },[])\n\n\n    return (\n    <MasterList>\n        {loading ? \n        <p>\n            Loading Invitation Page\n        </p> : \n            (users?.map((user, i)=>(\n                <ListItemUser index={i} key={user.id} user={user}/>\n            ))\n            )}\n    </MasterList>\n\n    )\n}\n\nexport default UserList\n"]},"metadata":{},"sourceType":"module"}