{"ast":null,"code":"var _jsxFileName = \"/home/dan/Documents/projectv2/front/src/components/ChannelInner.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { MessageList, MessageInput, Thread, useChannelActionContext, useChannelStateContext, useChatContext, Window } from 'stream-chat-react'; // This component is made up of a bunch of stream chat components\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Contexto = /*#__PURE__*/React.createContext({}); //.team-channel-header__name-wrapper {\n\nvar ListHeaderStyle = {\n  flex: \"3\",\n  display: \"flex\",\n  alignItems: \"center\",\n  overflowX: \"auto\",\n  maxWidth: \"520px\",\n  whiteSpace: \"nowrap\",\n  scrollbarWidth: \"none\"\n};\nvar multi_header = {\n  display: \"flex\",\n  alignItems: \"center\",\n  marginRight: \"9px\"\n};\nvar channel_header = {\n  fontFamily: \"sans-serif\",\n  fontWeight: \"bold\",\n  fontSize: \"18px\",\n  color: \"#2c2c30\",\n  marginRight: \"8px\"\n};\nvar right_text = {\n  fontFamily: \"sans-serif\",\n  fontSize: \"14px\",\n  color: \"#858688\"\n};\nvar right_text_inner = {\n  display: \"flex\",\n  paddingLeft: \"10px\"\n};\nvar header_container = {\n  height: \"72px\"\n};\n\nfunction ChannelInner({\n  setIsEditing\n}) {\n  _s();\n\n  const [messageState, setMessageState] = useState(false);\n  const {\n    postMessage\n  } = useChannelActionContext();\n\n  const SubmitHandler = message => {\n    var _message$parent;\n\n    var updatedMessage = {\n      mentioned_users: message.mentioned_users,\n      text: message.text,\n      parent: message.parent,\n      parent_id: (_message$parent = message.parent) === null || _message$parent === void 0 ? void 0 : _message$parent.id,\n      attachments: message.attachments\n    };\n\n    if (messageState == true) {\n      updatedMessage = { ...updatedMessage,\n        text: `/giphy ${message.text}`\n      };\n    }\n\n    if (postMessage == true) {\n      postMessage(updatedMessage);\n      setMessageState(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Contexto.Provider, {\n    value: {\n      messageState,\n      setMessageState\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Window, {\n        children: [/*#__PURE__*/_jsxDEV(TeamChannelHeader, {\n          setIsEditing: setIsEditing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MessageList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n          SubmitHandler: SubmitHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Thread, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChannelInner, \"eh0TneheYUWsJM7Hw/7H+mhVyvQ=\", false, function () {\n  return [useChannelActionContext];\n});\n\n_c = ChannelInner;\n;\n\nconst TeamChannelHeader = ({\n  setIsEditing\n}) => {\n  _s2();\n\n  var {\n    channel,\n    watcher_count\n  } = useChannelStateContext();\n  var {\n    client\n  } = useChatContext();\n\n  const MessagingHeader = () => {\n    const members = Object.values(channel.state.members).filter(({\n      user\n    }) => user.id !== client.userID);\n\n    if (channel.type === 'messaging') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: ListHeaderStyle,\n        children: members.map(({\n          user\n        }, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: multi_header,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: user.fullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"channel-inner-header-wrap2\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: channel_header,\n        children: [\"Group: \", channel.data.name, \" || Code: \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this);\n  };\n\n  const getWatcherText = watchers => {\n    if (!watchers) return 'No users online';\n    if (watchers === 1) return '1 user online';\n    return `${watchers} users online`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: header_container,\n    children: [/*#__PURE__*/_jsxDEV(MessagingHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: right_text_inner,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: right_text,\n        children: getWatcherText(watcher_count)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 7\n  }, this);\n};\n\n_s2(TeamChannelHeader, \"Tb4arasuDJW0BnLDUr6/wz198yQ=\", false, function () {\n  return [useChannelStateContext, useChatContext];\n});\n\n_c2 = TeamChannelHeader;\nexport default ChannelInner;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChannelInner\");\n$RefreshReg$(_c2, \"TeamChannelHeader\");","map":{"version":3,"sources":["/home/dan/Documents/projectv2/front/src/components/ChannelInner.jsx"],"names":["React","useState","MessageList","MessageInput","Thread","useChannelActionContext","useChannelStateContext","useChatContext","Window","Contexto","createContext","ListHeaderStyle","flex","display","alignItems","overflowX","maxWidth","whiteSpace","scrollbarWidth","multi_header","marginRight","channel_header","fontFamily","fontWeight","fontSize","color","right_text","right_text_inner","paddingLeft","header_container","height","ChannelInner","setIsEditing","messageState","setMessageState","postMessage","SubmitHandler","message","updatedMessage","mentioned_users","text","parent","parent_id","id","attachments","width","TeamChannelHeader","channel","watcher_count","client","MessagingHeader","members","Object","values","state","filter","user","userID","type","map","i","fullName","data","name","getWatcherText","watchers"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { MessageList, MessageInput, Thread,  useChannelActionContext, useChannelStateContext, useChatContext, Window} from 'stream-chat-react';\n// This component is made up of a bunch of stream chat components\n\nexport const Contexto = React.createContext({});\n//.team-channel-header__name-wrapper {\n \nvar ListHeaderStyle = {\n  flex: \"3\",\n  display: \"flex\",\n  alignItems: \"center\",\n  overflowX: \"auto\",\n  maxWidth: \"520px\",\n  whiteSpace: \"nowrap\",\n  scrollbarWidth: \"none\",\n\n};\n\nvar multi_header ={\n  display: \"flex\",\n  alignItems: \"center\",\n  marginRight: \"9px\"\n}\n\nvar channel_header=\n{\n  fontFamily: \"sans-serif\",\n  fontWeight: \"bold\",\n  fontSize: \"18px\",\n  color: \"#2c2c30\",\n  marginRight: \"8px\"\n}\n\nvar right_text = {\n  fontFamily:\"sans-serif\",\n  fontSize: \"14px\",\n  color: \"#858688\"\n}\n\n\nvar right_text_inner= {\n  display: \"flex\",\n  paddingLeft: \"10px\"\n}\n\nvar header_container=\n{\n  height: \"72px\"\n}\n\n\nfunction ChannelInner({ setIsEditing }){\n\n  const [messageState, setMessageState] = useState(false);\n\n  const { postMessage } = useChannelActionContext();\n  \n  const SubmitHandler = (message) => {\n    var updatedMessage = {\n      mentioned_users: message.mentioned_users,\n      text: message.text,\n      parent: message.parent,\n      parent_id: message.parent?.id,\n      attachments: message.attachments,\n    };\n    \n    if (messageState == true) {\n      updatedMessage = { ...updatedMessage, text: `/giphy ${message.text}` };\n    }\n    \n    if (postMessage == true) {\n      postMessage(updatedMessage);\n      setMessageState(false);\n    }\n  };\n\n  return (\n    <Contexto.Provider value={{ messageState, setMessageState }}>\n      <div style={{ display: 'flex', width: '100%' }}>\n        <Window>\n          <TeamChannelHeader setIsEditing={setIsEditing} />\n          <MessageList />\n          <MessageInput SubmitHandler={SubmitHandler} />\n        </Window>\n        <Thread />\n      </div>\n    </Contexto.Provider>\n  );\n};\n\nconst TeamChannelHeader = ({ setIsEditing }) => {\n    var { channel, watcher_count } = useChannelStateContext();\n    var { client } = useChatContext();\n  \n    const MessagingHeader = () => {\n      const members = Object.values(channel.state.members).filter(({ user }) => user.id !== client.userID);\n  \n      if(channel.type === 'messaging') {\n        return (\n          <div style={ListHeaderStyle}>\n            {members.map(({ user }, i) => (\n              <div key={i} style={multi_header}>\n                <p>{user.fullName}</p>\n              </div>\n            ))}\n          </div>\n        );\n      }\n  \n      return (\n        <div className='channel-inner-header-wrap2'>\n          <p style={channel_header}>Group: {channel.data.name} || Code: </p>\n        </div>\n      );\n    };\n  \n    const getWatcherText = (watchers) => {\n      if (!watchers) return 'No users online';\n      if (watchers === 1) return '1 user online';\n      return `${watchers} users online`;\n    };\n  \n    return (\n      <div style={header_container}>\n        <MessagingHeader />\n        <div style={right_text_inner}>\n          <p style={right_text}>{getWatcherText(watcher_count)}</p>\n        </div>\n      </div>\n    );\n  };\n\n  export default ChannelInner;"]},"metadata":{},"sourceType":"module"}