{"ast":null,"code":"var _jsxFileName = \"/home/dan/Documents/projectv2/front/src/components/ChatPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useChatContext } from \"stream-chat-react\";\nimport { Channel } from \"stream-chat-react\";\nimport ChannelFrame from './ChannelFrame';\nimport CreateChannel from './CreateChannel';\nimport ChannelOptions from './ChannelOptions';\nimport TeamMessage from './TeamMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar channelStyle = {\n  height: \"100%\",\n  width: \"100%\"\n};\nvar EmptyChannelStyle = {\n  display: \"flex\",\n  height: \"100%\",\n  flexDirection: \"column\",\n  justifyContent: \"flex-end\",\n  marginLeft: \"20px\",\n  marginRight: \"20px\",\n  paddingBottom: \"20px\"\n};\nvar EmptyChannelParagraphStyle = {\n  fontFamily: \"sans-serif\",\n  fontWeight: \"bold\",\n  fontSize: \"18px\",\n  lineHeight: \"120%\",\n  color: \"#2c2c30\",\n  marginBottom: \"10px\"\n};\nvar EmptyChannelParagraphTwoStyle = {\n  fontSize: \"14px\",\n  lineHeight: \"120%\",\n  margin: \"0\",\n  color: \"#858688\"\n};\n\nfunction ChatPage({\n  newChannel,\n  openOptions,\n  setNewChannel,\n  setOpenOptions,\n  createType\n}) {\n  _s();\n\n  const {\n    channel\n  } = useChatContext();\n\n  if (newChannel) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: channelStyle,\n      children: /*#__PURE__*/_jsxDEV(CreateChannel, {\n        createType: createType,\n        setNewChannel: setNewChannel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (openOptions) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: channelStyle,\n      children: /*#__PURE__*/_jsxDEV(ChannelOptions, {\n        setOpenOptions: setOpenOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n\n  const noState = () => {\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      style: EmptyChannelStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: EmptyChannelParagraphStyle,\n        children: \"Chat History Start: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: EmptyChannelParagraphTwoStyle,\n        children: \"Send stuff\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: channelStyle,\n    children: /*#__PURE__*/_jsxDEV(Channel, {\n      EmptyStateIndicator: noState,\n      Message: (messageProps, i) => /*#__PURE__*/_jsxDEV(TeamMessage, { ...messageProps\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 47\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChatPage, \"Y8G6UshdUXxX4l0KFZoPlRCuJ9A=\", false, function () {\n  return [useChatContext];\n});\n\n_c = ChatPage;\nexport default ChatPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"sources":["/home/dan/Documents/projectv2/front/src/components/ChatPage.jsx"],"names":["React","useChatContext","Channel","ChannelFrame","CreateChannel","ChannelOptions","TeamMessage","channelStyle","height","width","EmptyChannelStyle","display","flexDirection","justifyContent","marginLeft","marginRight","paddingBottom","EmptyChannelParagraphStyle","fontFamily","fontWeight","fontSize","lineHeight","color","marginBottom","EmptyChannelParagraphTwoStyle","margin","ChatPage","newChannel","openOptions","setNewChannel","setOpenOptions","createType","channel","noState","messageProps","i"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,cAAR,QAA6B,mBAA7B;AACA,SAAQC,OAAR,QAAsB,mBAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,MAAM,EAAE,MADO;AAEfC,EAAAA,KAAK,EAAE;AAFQ,CAAnB;AAKA,IAAIC,iBAAiB,GAAG;AACpBC,EAAAA,OAAO,EAAE,MADW;AAEpBH,EAAAA,MAAM,EAAE,MAFY;AAGpBI,EAAAA,aAAa,EAAE,QAHK;AAIpBC,EAAAA,cAAc,EAAE,UAJI;AAKpBC,EAAAA,UAAU,EAAE,MALQ;AAMpBC,EAAAA,WAAW,EAAE,MANO;AAOpBC,EAAAA,aAAa,EAAE;AAPK,CAAxB;AAUE,IAAIC,0BAA0B,GAAG;AAC/BC,EAAAA,UAAU,EAAE,YADmB;AAE/BC,EAAAA,UAAU,EAAE,MAFmB;AAG/BC,EAAAA,QAAQ,EAAE,MAHqB;AAI/BC,EAAAA,UAAU,EAAE,MAJmB;AAK/BC,EAAAA,KAAK,EAAE,SALwB;AAM/BC,EAAAA,YAAY,EAAE;AANiB,CAAjC;AAQA,IAAIC,6BAA6B,GAAG;AAClCJ,EAAAA,QAAQ,EAAE,MADwB;AAElCC,EAAAA,UAAU,EAAE,MAFsB;AAGlCI,EAAAA,MAAM,EAAE,GAH0B;AAIlCH,EAAAA,KAAK,EAAE;AAJ2B,CAApC;;AAOF,SAASI,QAAT,CACI;AACIC,EAAAA,UADJ;AAEIC,EAAAA,WAFJ;AAGIC,EAAAA,aAHJ;AAIIC,EAAAA,cAJJ;AAKIC,EAAAA;AALJ,CADJ,EAQM;AAAA;;AACF,QAAM;AAAEC,IAAAA;AAAF,MAAc/B,cAAc,EAAlC;;AAEA,MAAG0B,UAAH,EAAc;AACV,wBACI;AAAK,MAAA,KAAK,EAAEpB,YAAZ;AAAA,6BACI,QAAC,aAAD;AAAe,QAAA,UAAU,EAAEwB,UAA3B;AAAuC,QAAA,aAAa,EAAEF;AAAtD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAED,MAAGD,WAAH,EAAe;AACX,wBACI;AAAK,MAAA,KAAK,EAAErB,YAAZ;AAAA,6BACI,QAAC,cAAD;AAAgB,QAAA,cAAc,EAAEuB;AAAhC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAED,QAAMG,OAAO,GAAC,MAAM;AAChB;AAAA;AAAK,MAAA,KAAK,EAAEvB,iBAAZ;AAAA,8BACI;AAAG,QAAA,KAAK,EAAEO,0BAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAG,QAAA,KAAK,EAAEO,6BAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAIH,GALD;;AAOA,sBACI;AAAK,IAAA,KAAK,EAAEjB,YAAZ;AAAA,2BACI,QAAC,OAAD;AACI,MAAA,mBAAmB,EAAE0B,OADzB;AAEI,MAAA,OAAO,EAAE,CAACC,YAAD,EAAeC,CAAf,kBAAqB,QAAC,WAAD,OAAyBD;AAAzB,SAAkBC,CAAlB;AAAA;AAAA;AAAA;AAAA;AAFlC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GA5CQT,Q;UASezB,c;;;KATfyB,Q;AA8CT,eAAeA,QAAf","sourcesContent":["import React from 'react'\nimport {useChatContext} from \"stream-chat-react\"\nimport {Channel} from \"stream-chat-react\"\nimport ChannelFrame from './ChannelFrame';\nimport CreateChannel from './CreateChannel';\nimport ChannelOptions from './ChannelOptions';\nimport TeamMessage from './TeamMessage';\n\nvar channelStyle = {\n    height: \"100%\",\n    width: \"100%\",\n  };\n\nvar EmptyChannelStyle = {\n    display: \"flex\",\n    height: \"100%\",\n    flexDirection: \"column\",\n    justifyContent: \"flex-end\",\n    marginLeft: \"20px\",\n    marginRight: \"20px\",\n    paddingBottom: \"20px\"\n  };\n\n  var EmptyChannelParagraphStyle = {\n    fontFamily: \"sans-serif\",\n    fontWeight: \"bold\",\n    fontSize: \"18px\",\n    lineHeight: \"120%\",\n    color: \"#2c2c30\",\n    marginBottom: \"10px\"\n  };\n  var EmptyChannelParagraphTwoStyle = {\n    fontSize: \"14px\",\n    lineHeight: \"120%\",\n    margin: \"0\",\n    color: \"#858688\"\n  };\n\nfunction ChatPage(\n    {\n        newChannel,\n        openOptions,\n        setNewChannel,\n        setOpenOptions,\n        createType\n    }\n    ) {\n    const { channel } = useChatContext();\n\n    if(newChannel){\n        return(\n            <div style={channelStyle}>\n                <CreateChannel createType={createType} setNewChannel={setNewChannel} />\n            </div>\n        )\n    }\n\n    if(openOptions){\n        return(\n            <div style={channelStyle}>\n                <ChannelOptions setOpenOptions={setOpenOptions}/>\n            </div>\n        )\n    }\n\n    const noState=() => {\n        <div style={EmptyChannelStyle}>\n            <p style={EmptyChannelParagraphStyle}>Chat History Start: </p>\n            <p style={EmptyChannelParagraphTwoStyle}>Send stuff</p>\n        </div>\n    }\n\n    return (\n        <div style={channelStyle}>\n            <Channel\n                EmptyStateIndicator={noState}\n                Message={(messageProps, i) => <TeamMessage key={i} {...messageProps} />}\n            >\n                \n            </Channel >\n        </div>\n    )\n}\n\nexport default ChatPage\n"]},"metadata":{},"sourceType":"module"}