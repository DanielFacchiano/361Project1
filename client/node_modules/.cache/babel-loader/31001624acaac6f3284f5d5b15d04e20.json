{"ast":null,"code":"var _jsxFileName = \"/home/dan/Documents/projectv2/front/src/components/ChannelOptions.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useChatContext } from 'stream-chat-react';\nimport UserList from './UserList';\nimport { CloseCreate } from '../Stuff/CloseCreate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar titleWrapperContainer = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  height: \"160px\",\n  paddingLeft: \"25px\"\n};\nvar optionsContainer = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  height: \"100%\"\n};\nvar optionsHeader = {\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"space-between\",\n  height: \"62px\",\n  paddingRight: \"24px\"\n};\nvar optionsSubmitWrap = {\n  height: \"80px\",\n  background: \" #f7f6f8\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"flex-end\",\n  borderBottomRightRadius: \"16px\"\n};\nvar optionsSubmit = {\n  height: \"80px\",\n  background: \" #f7f6f8\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"flex-end\",\n  borderBottomRightRadius: \"16px\"\n};\n\nfunction ChannelNameInput({\n  channelName = '',\n  setChannelName\n}) {\n  function detectChange(e) {\n    e.preventDefault();\n    setChannelName(e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: titleWrapperContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Channel Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: channelName,\n      onChange: detectChange,\n      placeholder: \"Channel-Name (No blanks allowed)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Add Members\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_c = ChannelNameInput;\n\nfunction ChannelOptions({\n  setOpenOptions\n}) {\n  _s();\n\n  var _channel$data;\n\n  const {\n    channel\n  } = useChatContext();\n  const [channelName, setChannelName] = useState(channel === null || channel === void 0 ? void 0 : (_channel$data = channel.data) === null || _channel$data === void 0 ? void 0 : _channel$data.name);\n  const [checkedUsers, setCheckedUsers] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: optionsContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: optionsHeader,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Channel Options\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CloseCreate, {\n        setOpenOptions: setOpenOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ChannelNameInput, {\n      channelName: channelName,\n      setChannelName: setChannelName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(UserList, {\n      setCheckedUsers: setCheckedUsers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChannelOptions, \"ZTXWK1jt7GzOKxAWfVum0Zx4Ro0=\", false, function () {\n  return [useChatContext];\n});\n\n_c2 = ChannelOptions;\nexport default ChannelOptions;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChannelNameInput\");\n$RefreshReg$(_c2, \"ChannelOptions\");","map":{"version":3,"sources":["/home/dan/Documents/projectv2/front/src/components/ChannelOptions.jsx"],"names":["React","useState","useChatContext","UserList","CloseCreate","titleWrapperContainer","display","flexDirection","height","paddingLeft","optionsContainer","optionsHeader","alignItems","justifyContent","paddingRight","optionsSubmitWrap","background","borderBottomRightRadius","optionsSubmit","ChannelNameInput","channelName","setChannelName","detectChange","e","preventDefault","target","value","ChannelOptions","setOpenOptions","channel","data","name","checkedUsers","setCheckedUsers"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {useChatContext} from 'stream-chat-react'\nimport UserList from './UserList';\nimport {CloseCreate} from '../Stuff/CloseCreate'\n\nvar titleWrapperContainer= {\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"160px\",\n    paddingLeft: \"25px\"\n}\n\nvar optionsContainer={\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"100%\"\n}\n\nvar optionsHeader={\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    height: \"62px\",\n    paddingRight: \"24px\"\n}\n\nvar optionsSubmitWrap={\nheight: \"80px\",\nbackground:\" #f7f6f8\",\ndisplay: \"flex\",\nalignItems: \"center\",\njustifyContent: \"flex-end\",\nborderBottomRightRadius: \"16px\"\n}\n\nvar optionsSubmit={\n    height: \"80px\",\n    background:\" #f7f6f8\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    borderBottomRightRadius: \"16px\"\n    }\n\nfunction ChannelNameInput({channelName = '', setChannelName}){\n\n    function detectChange(e){\n        e.preventDefault()\n        setChannelName(e.target.value)\n    }\n\n    return(\n        <div style={titleWrapperContainer}>\n            <p>Channel Name</p>\n            <input value={channelName} onChange={detectChange} placeholder=\"Channel-Name (No blanks allowed)\" />\n            <p>Add Members</p>\n        </div>\n    )\n}\n\nfunction ChannelOptions({setOpenOptions}){\n    const {channel} = useChatContext();\n    const [channelName, setChannelName] = useState(channel?.data?.name)\n    const [checkedUsers, setCheckedUsers] = useState([])\n\n\n    return (\n        <div style={optionsContainer}>\n            <div style={optionsHeader}>\n                <p>\n                    Channel Options\n                </p>\n                <CloseCreate setOpenOptions={setOpenOptions}/>\n            </div>\n            <ChannelNameInput channelName={channelName} setChannelName={setChannelName} />\n            <UserList setCheckedUsers={setCheckedUsers} />\n            \n\n        </div>\n    )\n}\n\nexport default ChannelOptions\n"]},"metadata":{},"sourceType":"module"}