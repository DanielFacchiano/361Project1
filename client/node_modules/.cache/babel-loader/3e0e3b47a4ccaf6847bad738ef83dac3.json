{"ast":null,"code":"var _jsxFileName = \"/home/dan/Documents/projectv2/front/src/components/ChannelInner.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { MessageList, MessageInput, Thread, Window, useChannelActionContext, Avatar, useChannelStateContext, useChatContext } from 'stream-chat-react'; // This component is made up of a bunch of stream chat components\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Contexto = /*#__PURE__*/React.createContext({});\n\nfunction ChannelInner({\n  setIsEditing\n}) {\n  _s();\n\n  const [messageState, set] = useState(false);\n  const {\n    sendMessage\n  } = useChannelActionContext();\n\n  const overrideSubmitHandler = message => {\n    var _message$parent;\n\n    let updatedMessage = {\n      attachments: message.attachments,\n      mentioned_users: message.mentioned_users,\n      parent_id: (_message$parent = message.parent) === null || _message$parent === void 0 ? void 0 : _message$parent.id,\n      parent: message.parent,\n      text: message.text\n    };\n\n    if (giphyState) {\n      updatedMessage = { ...updatedMessage,\n        text: `/giphy ${message.text}`\n      };\n    }\n\n    if (sendMessage) {\n      sendMessage(updatedMessage);\n      setGiphyState(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Contexto.Provider, {\n    value: {\n      giphyState,\n      setGiphyState\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Window, {\n        children: [/*#__PURE__*/_jsxDEV(TeamChannelHeader, {\n          setIsEditing: setIsEditing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MessageList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n          overrideSubmitHandler: overrideSubmitHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Thread, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChannelInner, \"6LHQfrfflfZTC/FvGDI9Td0FWyg=\", false, function () {\n  return [useChannelActionContext];\n});\n\n_c = ChannelInner;\n;\n\nconst TeamChannelHeader = ({\n  setIsEditing\n}) => {\n  _s2();\n\n  const {\n    channel,\n    watcher_count\n  } = useChannelStateContext();\n  const {\n    client\n  } = useChatContext();\n\n  const MessagingHeader = () => {\n    const members = Object.values(channel.state.members).filter(({\n      user\n    }) => user.id !== client.userID);\n\n    if (channel.type === 'messaging') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"team-channel-header__name-wrapper\",\n        children: members.map(({\n          user\n        }, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"team-channel-header__name-multi\",\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            image: user.image,\n            name: user.fullName || user.id,\n            size: 32\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"team-channel-header__name user\",\n            children: user.fullName || user.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"team-channel-header__channel-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"team-channel-header__name\",\n        children: [\"Group: \", channel.data.name, \" || Code: \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this);\n  };\n\n  const getWatcherText = watchers => {\n    if (!watchers) return 'No users online';\n    if (watchers === 1) return '1 user online';\n    return `${watchers} users online`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"team-channel-header__container\",\n    children: [/*#__PURE__*/_jsxDEV(MessagingHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"team-channel-header__right\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"team-channel-header__right-text\",\n        children: getWatcherText(watcher_count)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 7\n  }, this);\n};\n\n_s2(TeamChannelHeader, \"Tb4arasuDJW0BnLDUr6/wz198yQ=\", false, function () {\n  return [useChannelStateContext, useChatContext];\n});\n\n_c2 = TeamChannelHeader;\nexport default ChannelInner;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChannelInner\");\n$RefreshReg$(_c2, \"TeamChannelHeader\");","map":{"version":3,"sources":["/home/dan/Documents/projectv2/front/src/components/ChannelInner.jsx"],"names":["React","useState","MessageList","MessageInput","Thread","Window","useChannelActionContext","Avatar","useChannelStateContext","useChatContext","Contexto","createContext","ChannelInner","setIsEditing","messageState","set","sendMessage","overrideSubmitHandler","message","updatedMessage","attachments","mentioned_users","parent_id","parent","id","text","giphyState","setGiphyState","display","width","TeamChannelHeader","channel","watcher_count","client","MessagingHeader","members","Object","values","state","filter","user","userID","type","map","i","image","fullName","data","name","getWatcherText","watchers"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { MessageList, MessageInput, Thread, Window, useChannelActionContext, Avatar, useChannelStateContext, useChatContext } from 'stream-chat-react';\n// This component is made up of a bunch of stream chat components\n\nexport const Contexto = React.createContext({});\n\nfunction ChannelInner({ setIsEditing }){\n  const [messageState, set] = useState(false);\n  const { sendMessage } = useChannelActionContext();\n  \n  const overrideSubmitHandler = (message) => {\n    let updatedMessage = {\n      attachments: message.attachments,\n      mentioned_users: message.mentioned_users,\n      parent_id: message.parent?.id,\n      parent: message.parent,\n      text: message.text,\n    };\n    \n    if (giphyState) {\n      updatedMessage = { ...updatedMessage, text: `/giphy ${message.text}` };\n    }\n    \n    if (sendMessage) {\n      sendMessage(updatedMessage);\n      setGiphyState(false);\n    }\n  };\n\n  return (\n    <Contexto.Provider value={{ giphyState, setGiphyState }}>\n      <div style={{ display: 'flex', width: '100%' }}>\n        <Window>\n          <TeamChannelHeader setIsEditing={setIsEditing} />\n          <MessageList />\n          <MessageInput overrideSubmitHandler={overrideSubmitHandler} />\n        </Window>\n        <Thread />\n      </div>\n    </Contexto.Provider>\n  );\n};\n\nconst TeamChannelHeader = ({ setIsEditing }) => {\n    const { channel, watcher_count } = useChannelStateContext();\n    const { client } = useChatContext();\n  \n    const MessagingHeader = () => {\n      const members = Object.values(channel.state.members).filter(({ user }) => user.id !== client.userID);\n  \n      if(channel.type === 'messaging') {\n        return (\n          <div className='team-channel-header__name-wrapper'>\n            {members.map(({ user }, i) => (\n              <div key={i} className='team-channel-header__name-multi'>\n                <Avatar image={user.image} name={user.fullName || user.id} size={32} />\n                <p className='team-channel-header__name user'>{user.fullName || user.id}</p>\n              </div>\n            ))}\n          </div>\n        );\n      }\n  \n      return (\n        <div className='team-channel-header__channel-wrapper'>\n          <p className='team-channel-header__name'>Group: {channel.data.name} || Code: </p>\n        </div>\n      );\n    };\n  \n    const getWatcherText = (watchers) => {\n      if (!watchers) return 'No users online';\n      if (watchers === 1) return '1 user online';\n      return `${watchers} users online`;\n    };\n  \n    return (\n      <div className='team-channel-header__container'>\n        <MessagingHeader />\n        <div className='team-channel-header__right'>\n          <p className='team-channel-header__right-text'>{getWatcherText(watcher_count)}</p>\n        </div>\n      </div>\n    );\n  };\n\n  export default ChannelInner;"]},"metadata":{},"sourceType":"module"}