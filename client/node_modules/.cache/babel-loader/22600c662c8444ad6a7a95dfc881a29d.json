{"ast":null,"code":"var _jsxFileName = \"/home/dan/Documents/projectv2/client/src/components/CreateChannel.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useChatContext } from 'stream-chat-react';\nimport { CloseCreate } from '../Stuff/CloseCreate';\nimport UserList from './UserList'; // Style for main wrapper\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar createContainer = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  height: \"100%\"\n}; // style for the title input div\n\nvar titleWrapperContainer = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  height: \"160px\",\n  paddingLeft: \"25px\"\n};\nvar createHeader = {\n  fontFamily: \"sans-serif\",\n  fontWeight: \"bold\",\n  fontSize: \"18px\",\n  marginLeft: \"20px\"\n};\nvar buttonWrapper = {\n  height: \"82px\",\n  background: \"#f7f6f8\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"flex-end\",\n  borderBottomRightRadius: \"16px\",\n  padding: \"0px 10px\"\n};\nvar buttonStyle = {\n  background: \"salmon\",\n  fontFamily: \"sans-serif\",\n  fontWeight: \"bold\",\n  fontSize: \"18px\",\n  padding: \"10px 20px\",\n  color: \"#ffffff\",\n  borderRadius: \"8px\",\n  cursor: \"pointer\"\n};\n\nfunction ChannelNameInput({\n  channelName = '',\n  setChannelName\n}) {\n  function detectChange(e) {\n    e.preventDefault();\n    setChannelName(e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: titleWrapperContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Channel Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: channelName,\n      onChange: detectChange,\n      placeholder: \"Channel-Name (No blanks allowed)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Add Members\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_c = ChannelNameInput;\n\nfunction CreateChannel({\n  createType,\n  setNewChannel\n}) {\n  _s();\n\n  const [channelName, setChannelName] = useState('');\n  const {\n    client,\n    setActiveChannel\n  } = useChatContext();\n  const [checkedUsers, setCheckedUsers] = useState([client.userID || '']);\n\n  async function SubmitChannel(e) {\n    e.preventDefault();\n\n    try {\n      var newGroup = await client.channel(createType, channelName, {\n        name: channelName,\n        members: checkedUsers\n      });\n      await newGroup.watch();\n      setChannelName('');\n      setNewChannel(false);\n      setCheckedUsers([client.userID]);\n      setActiveChannel(newGroup);\n    } catch (error) {\n      console.log();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: createContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: createHeader,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: createType === 'team' ? 'Create a new Group' : 'send direct message'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CloseCreate, {\n        setNewChannel: setNewChannel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), createType === 'team' && /*#__PURE__*/_jsxDEV(ChannelNameInput, {\n      channelName: channelName,\n      setChannelName: setChannelName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 39\n    }, this), /*#__PURE__*/_jsxDEV(UserList, {\n      setCheckedUsers: setCheckedUsers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: buttonWrapper,\n      onClick: SubmitChannel,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: buttonStyle,\n        children: createType === 'team' ? 'Create Channel' : 'Create Message'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateChannel, \"pWsLE72L1gR0zliZbronbaxgEMY=\", false, function () {\n  return [useChatContext];\n});\n\n_c2 = CreateChannel;\nexport default CreateChannel;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChannelNameInput\");\n$RefreshReg$(_c2, \"CreateChannel\");","map":{"version":3,"sources":["/home/dan/Documents/projectv2/client/src/components/CreateChannel.jsx"],"names":["React","useState","useChatContext","CloseCreate","UserList","createContainer","display","flexDirection","height","titleWrapperContainer","paddingLeft","createHeader","fontFamily","fontWeight","fontSize","marginLeft","buttonWrapper","background","alignItems","justifyContent","borderBottomRightRadius","padding","buttonStyle","color","borderRadius","cursor","ChannelNameInput","channelName","setChannelName","detectChange","e","preventDefault","target","value","CreateChannel","createType","setNewChannel","client","setActiveChannel","checkedUsers","setCheckedUsers","userID","SubmitChannel","newGroup","channel","name","members","watch","error","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {useChatContext} from 'stream-chat-react'\nimport {CloseCreate} from '../Stuff/CloseCreate'\nimport UserList from './UserList';\n\n// Style for main wrapper\nvar createContainer = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"100%\"\n}\n// style for the title input div\nvar titleWrapperContainer= {\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"160px\",\n    paddingLeft: \"25px\"\n}\n\nvar createHeader= {\n    fontFamily: \"sans-serif\",\n    fontWeight: \"bold\",\n    fontSize: \"18px\",\n    marginLeft: \"20px\"\n}\n\nvar buttonWrapper={\n    height: \"82px\",\n    background: \"#f7f6f8\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    borderBottomRightRadius: \"16px\",\n    padding: \"0px 10px\"\n}\n\nvar buttonStyle={\n    background:\"salmon\",\n    fontFamily: \"sans-serif\",\n    fontWeight: \"bold\",\n    fontSize: \"18px\",\n    padding: \"10px 20px\",\n    color: \"#ffffff\",\n    borderRadius: \"8px\",\n    cursor: \"pointer\"\n}\n\nfunction ChannelNameInput({channelName = '', setChannelName}){\n\n    function detectChange(e){\n        e.preventDefault()\n        setChannelName(e.target.value)\n    }\n\n    return(\n        <div style={titleWrapperContainer}>\n            <p>Channel Name</p>\n            <input value={channelName} onChange={detectChange} placeholder=\"Channel-Name (No blanks allowed)\" />\n            <p>Add Members</p>\n        </div>\n    )\n}\n\nfunction CreateChannel({createType, setNewChannel}){\n    const [channelName, setChannelName] = useState('')\n    const {client, setActiveChannel} = useChatContext();\n    const [checkedUsers, setCheckedUsers] = useState([client.userID || ''])\n\n    async function SubmitChannel (e){\n        e.preventDefault()\n\n        try {\n\n            var newGroup = await client.channel(createType, channelName, {\n                name: channelName, members: checkedUsers\n            })\n\n            await newGroup.watch();\n\n            setChannelName('')\n            setNewChannel(false)\n            setCheckedUsers([client.userID])\n            setActiveChannel(newGroup)\n        } catch(error){\n            console.log()\n        }\n    }\n\n    return (\n        <div style={createContainer}>\n            <div style={createHeader}>\n                <p>\n                    {createType === 'team' ? 'Create a new Group' : 'send direct message'}\n                </p>\n                <CloseCreate setNewChannel={setNewChannel}/>\n            </div>\n            {createType === 'team' && <ChannelNameInput channelName={channelName} setChannelName={setChannelName}/>}\n            <UserList setCheckedUsers={setCheckedUsers}  />\n            <div style={buttonWrapper} onClick={SubmitChannel}>\n                <p style={buttonStyle}>\n                    {createType=== 'team' ? 'Create Channel' : 'Create Message'}\n\n                </p>\n            </div>\n        </div>\n    )\n}\n\nexport default CreateChannel\n"]},"metadata":{},"sourceType":"module"}