{"ast":null,"code":"var _jsxFileName = \"/home/dan/Documents/projectv2/front/src/components/GroupFinder.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useChatContext } from 'stream-chat-react';\nimport { SearchIcon } from '../Stuff/SearchIcon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GroupFinder() {\n  _s();\n\n  const [searchValue, setSearchValue] = useState('');\n  const [parsing, setParsing] = useState(false);\n\n  const getGroups = async text => {\n    try {//get the channels\n    } catch (error) {\n      setSearchValue('');\n    }\n  };\n\n  const newText = e => {\n    e.preventDefault();\n    setParsing(true); //Event holds the text under its target value\n\n    setSearchValue(e.target.value); // get groups with this value\n\n    getGroups(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"group_finder_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"search_input\",\n      type: \"text\",\n      value: searchValue,\n      onChange: newText,\n      placeholder: \"Group Finder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GroupFinder, \"83wD1VUXdPzKNJWZReQI2p3ROaM=\");\n\n_c = GroupFinder;\nexport default GroupFinder;\n\nvar _c;\n\n$RefreshReg$(_c, \"GroupFinder\");","map":{"version":3,"sources":["/home/dan/Documents/projectv2/front/src/components/GroupFinder.jsx"],"names":["React","useState","useEffect","useChatContext","SearchIcon","GroupFinder","searchValue","setSearchValue","parsing","setParsing","getGroups","text","error","newText","e","preventDefault","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAAQC,cAAR,QAA6B,mBAA7B;AACA,SAAQC,UAAR,QAAyB,qBAAzB;;;AAIA,SAASC,WAAT,GAAuB;AAAA;;AACnB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMS,SAAS,GAAG,MAAMC,IAAN,IAAa;AAC3B,QAAG,CACC;AAEH,KAHD,CAGE,OAAOC,KAAP,EAAc;AACZL,MAAAA,cAAc,CAAC,EAAD,CAAd;AACH;AACJ,GAPD;;AASA,QAAMM,OAAO,GAAIC,CAAD,IAAM;AAClBA,IAAAA,CAAC,CAACC,cAAF;AACAN,IAAAA,UAAU,CAAC,IAAD,CAAV,CAFkB,CAGlB;;AACAF,IAAAA,cAAc,CAACO,CAAC,CAACE,MAAF,CAASC,KAAV,CAAd,CAJkB,CAKlB;;AACAP,IAAAA,SAAS,CAACI,CAAC,CAACE,MAAF,CAASC,KAAV,CAAT;AACH,GAPD;;AASA,sBACI;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA,4BACI;AAAA,6BACI;AAAA,+BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AACI,MAAA,SAAS,EAAC,cADd;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,KAAK,EAAIX,WAHb;AAII,MAAA,QAAQ,EAAIO,OAJhB;AAKI,MAAA,WAAW,EAAC;AALhB;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GAvCQR,W;;KAAAA,W;AAyCT,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect} from 'react'\nimport {useChatContext} from 'stream-chat-react'\nimport {SearchIcon} from '../Stuff/SearchIcon'\n\n\n\nfunction GroupFinder() {\n    const [searchValue, setSearchValue] = useState('');\n    const [parsing, setParsing] = useState(false);\n\n    const getGroups = async(text)=>{\n        try{\n            //get the channels\n\n        } catch (error) {\n            setSearchValue('')\n        }\n    }\n\n    const newText = (e) =>{\n        e.preventDefault();\n        setParsing(true);\n        //Event holds the text under its target value\n        setSearchValue(e.target.value)\n        // get groups with this value\n        getGroups(e.target.value)\n    }\n\n    return (\n        <div className=\"group_finder_container\">\n            <div>\n                <div>\n                    <SearchIcon />\n                </div>\n            </div>\n            <input\n                className=\"search_input\"\n                type=\"text\"\n                value = {searchValue}\n                onChange = {newText}\n                placeholder=\"Group Finder\"\n\n            />\n        </div>\n    )\n}\n\nexport default GroupFinder\n"]},"metadata":{},"sourceType":"module"}