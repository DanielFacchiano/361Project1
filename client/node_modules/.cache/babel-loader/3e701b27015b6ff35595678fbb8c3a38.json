{"ast":null,"code":"var _jsxFileName = \"/home/dan/Documents/Untitled Folder/361Project1-master/client/src/components/ChannelOptions.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useChatContext } from 'stream-chat-react';\nimport InvitationList from './InvitationList';\nimport { ChannelList } from 'stream-chat-react'; //opensource svg, pass it a function to change edit state to false\n\nimport { CloseCreate } from '../Stuff/CloseCreate'; //styling for input with our channel name\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar titleWrapperContainer = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  height: \"160px\",\n  paddingLeft: \"25px\"\n}; //styling for main options page container\n\nvar optionsContainer = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  height: \"100%\"\n}; //styling for the options page Header\n\nvar optionsHeader = {\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"space-between\",\n  height: \"62px\",\n  paddingRight: \"24px\"\n}; //Styling for the outer submit button container\n\nvar optionsSubmitWrap = {\n  height: \"80px\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"flex-end\",\n  borderBottomRightRadius: \"16px\"\n}; //styling for the leave channel button\n\nvar optionsSubmitWrap2 = {\n  height: \"80px\",\n  display: \"flex\",\n  alignItems: \"center\",\n  borderBottomRightRadius: \"16px\"\n}; // options for both of the buttons inside text for our icons sidebar\n\nvar optionsSubmit = {\n  background: \"salmon\",\n  fontWeight: \"bold\",\n  fontSize: \"20px\",\n  padding: \"12px 22px\",\n  color: \"white\",\n  marginRight: \"30px\",\n  borderRadius: \"8px\",\n  cursor: \"pointer\"\n}; //function for the name input field\n\nfunction ChannelNameInput({\n  channelName = '',\n  setChannelName\n}) {\n  // If we detect title input field changes, we change our target title state for submitting eventually\n  function detectChange(e) {\n    e.preventDefault();\n    console.log(e.target.value);\n    setChannelName(e.target.value);\n  } // If we detect change in the channel name input, we set the channel name state to the detected input\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: titleWrapperContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Channel Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: channelName,\n      onChange: detectChange,\n      placeholder: \"Channel-Name (No blanks allowed)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Add New Members\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n} // Main channel OPtions component  states to record selected users, and current names. contexts for operations gathered\n\n\n_c = ChannelNameInput;\n\nfunction ChannelOptions({\n  setOpenOptions\n}) {\n  _s();\n\n  // Need client for current users userID to leave groups\n  const {\n    client\n  } = useChatContext(); // Need to know what channel we are editing\n\n  const {\n    channel\n  } = useChatContext(); // Detect changing channel name to pass around\n\n  const [channelName, setChannelName] = useState(channel.data.name); // array of the users that were checked in the InvitationList options list\n\n  const [checkedUsers, setCheckedUsers] = useState([]); // Function to handle submission\n\n  async function updateGroup(e) {\n    e.preventDefault(); // if we changed the name, we need to detect and pass that\n\n    var detectNewName = false; // if we have a different name...\n\n    if (channelName != (channel.data.name || channel.data.id)) {\n      detectNewName = true;\n    } //set new name by sending to stream chat component with correct context\n\n\n    if (detectNewName == true) {\n      await channel.update({\n        name: channelName\n      }, {\n        text: 'name changed'\n      });\n    } //if new users, set new users from checked users array\n\n\n    if (checkedUsers.length) {\n      await channel.addMembers(checkedUsers);\n    } //clean up options fields\n\n\n    setChannelName(null);\n    setOpenOptions(false);\n    setCheckedUsers([]);\n  } // function to leave the group\n  // Take client user id, and remove from the currently selected channel, open in the options\n\n\n  async function leaveGroup(e) {\n    e.preventDefault();\n    await channel.removeMembers([client.userID]); // clean up the states\n\n    setChannelName(null);\n    setOpenOptions(false);\n    setCheckedUsers([]);\n  } // Return the full options component, we have a header, an exit button which changes state onclick\n  // We have an input component so users can change channel name\n  // We have the list of registered users rendered on the screen\n  // and we have the buttons to leave and update the group\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: optionsContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: optionsHeader,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Channel Options\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CloseCreate, {\n        setOpenOptions: setOpenOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ChannelNameInput, {\n      channelName: channelName,\n      setChannelName: setChannelName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InvitationList, {\n      setCheckedUsers: setCheckedUsers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: optionsSubmitWrap,\n      onClick: updateGroup,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: optionsSubmit,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Leave \", channelName, \":  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Warning: Re-invitation required to Rejoin!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: optionsSubmitWrap2,\n        onClick: leaveGroup,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: optionsSubmit,\n          children: \"Leave Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChannelOptions, \"qcL6T6epTJGHjyzuzQQrLQ84UY0=\", false, function () {\n  return [useChatContext, useChatContext];\n});\n\n_c2 = ChannelOptions;\nexport default ChannelOptions;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChannelNameInput\");\n$RefreshReg$(_c2, \"ChannelOptions\");","map":{"version":3,"sources":["/home/dan/Documents/Untitled Folder/361Project1-master/client/src/components/ChannelOptions.jsx"],"names":["React","useState","useChatContext","InvitationList","ChannelList","CloseCreate","titleWrapperContainer","display","flexDirection","height","paddingLeft","optionsContainer","optionsHeader","alignItems","justifyContent","paddingRight","optionsSubmitWrap","borderBottomRightRadius","optionsSubmitWrap2","optionsSubmit","background","fontWeight","fontSize","padding","color","marginRight","borderRadius","cursor","ChannelNameInput","channelName","setChannelName","detectChange","e","preventDefault","console","log","target","value","ChannelOptions","setOpenOptions","client","channel","data","name","checkedUsers","setCheckedUsers","updateGroup","detectNewName","id","update","text","length","addMembers","leaveGroup","removeMembers","userID"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {useChatContext} from 'stream-chat-react'\nimport InvitationList from './InvitationList';\nimport { ChannelList } from 'stream-chat-react'\n\n\n//opensource svg, pass it a function to change edit state to false\nimport {CloseCreate} from '../Stuff/CloseCreate'\n\n//styling for input with our channel name\nvar titleWrapperContainer= {\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"160px\",\n    paddingLeft: \"25px\"\n}\n//styling for main options page container\nvar optionsContainer={\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"100%\"\n}\n//styling for the options page Header\nvar optionsHeader={\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    height: \"62px\",\n    paddingRight: \"24px\"\n}\n//Styling for the outer submit button container\nvar optionsSubmitWrap={\nheight: \"80px\",\ndisplay: \"flex\",\nalignItems: \"center\",\njustifyContent: \"flex-end\",\nborderBottomRightRadius: \"16px\"\n}\n//styling for the leave channel button\nvar optionsSubmitWrap2={\n    height: \"80px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    borderBottomRightRadius: \"16px\"\n    }\n// options for both of the buttons inside text for our icons sidebar\nvar optionsSubmit={\n    background: \"salmon\",\n    fontWeight: \"bold\",\n    fontSize: \"20px\",\n    padding: \"12px 22px\",\n    color: \"white\",\n    marginRight: \"30px\",\n    borderRadius: \"8px\",\n    cursor: \"pointer\"\n    }\n//function for the name input field\nfunction ChannelNameInput({channelName = '', setChannelName}){\n// If we detect title input field changes, we change our target title state for submitting eventually\n    function detectChange(e){\n        e.preventDefault()\n        console.log(e.target.value)\n        setChannelName(e.target.value)\n    }\n// If we detect change in the channel name input, we set the channel name state to the detected input\n    return(\n        <div style={titleWrapperContainer}>\n            <p>Channel Name</p>\n            <input value={channelName} onChange={detectChange} placeholder=\"Channel-Name (No blanks allowed)\" />\n            <p></p>\n            <span>Add New Members</span>\n        </div>\n    )\n}\n\n// Main channel OPtions component  states to record selected users, and current names. contexts for operations gathered\nfunction ChannelOptions({setOpenOptions}){\n    // Need client for current users userID to leave groups\n    const {client} = useChatContext()\n    // Need to know what channel we are editing\n    const {channel} = useChatContext();\n    // Detect changing channel name to pass around\n    const [channelName, setChannelName] = useState(channel.data.name)\n    // array of the users that were checked in the InvitationList options list\n    const [checkedUsers, setCheckedUsers] = useState([])\n    // Function to handle submission\n    async function updateGroup(e){\n        e.preventDefault();\n        // if we changed the name, we need to detect and pass that\n        var detectNewName = false\n        // if we have a different name...\n        if (channelName != (channel.data.name || channel.data.id)){\n            detectNewName=true\n        }\n        //set new name by sending to stream chat component with correct context\n        if(detectNewName==true) {\n            await channel.update({name: channelName}, {text: 'name changed'})\n        }\n        //if new users, set new users from checked users array\n        if(checkedUsers.length){\n            await channel.addMembers(checkedUsers)\n        }\n        //clean up options fields\n        setChannelName(null)\n        setOpenOptions(false)\n        setCheckedUsers([])\n    }\n    // function to leave the group\n    // Take client user id, and remove from the currently selected channel, open in the options\n    async function leaveGroup(e){\n        e.preventDefault();\n        await channel.removeMembers([client.userID]);\n        // clean up the states\n        setChannelName(null)\n        setOpenOptions(false)\n        setCheckedUsers([])\n\n    }\n    // Return the full options component, we have a header, an exit button which changes state onclick\n    // We have an input component so users can change channel name\n    // We have the list of registered users rendered on the screen\n    // and we have the buttons to leave and update the group\n    return (\n        <div style={optionsContainer}>\n            <div style={optionsHeader}>\n                <p>\n                    Channel Options\n                </p>\n                <CloseCreate setOpenOptions={setOpenOptions}/>\n            </div>\n            <ChannelNameInput channelName={channelName} setChannelName={setChannelName} />\n            <InvitationList setCheckedUsers={setCheckedUsers} />\n            <div style={optionsSubmitWrap} onClick={updateGroup}>\n                <p style={optionsSubmit}>\n                    Update\n                </p>\n            </div>\n            <div>\n                <h2>Leave {channelName}:  </h2>\n                <p>Warning: Re-invitation required to Rejoin!</p>\n                <div style={optionsSubmitWrap2} onClick={leaveGroup}>\n                <p style={optionsSubmit}>\n                    Leave Group\n                </p>\n            </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default ChannelOptions\n"]},"metadata":{},"sourceType":"module"}