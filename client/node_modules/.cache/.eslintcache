[{"/home/dan/Documents/projectv2/client/src/index.js":"1","/home/dan/Documents/projectv2/client/src/App.jsx":"2","/home/dan/Documents/projectv2/client/src/components/GroupList.jsx":"3","/home/dan/Documents/projectv2/client/src/components/ChatPage.jsx":"4","/home/dan/Documents/projectv2/client/src/components/SignIn.jsx":"5","/home/dan/Documents/projectv2/client/src/components/Groups.jsx":"6","/home/dan/Documents/projectv2/client/src/Stuff/SearchIcon.js":"7","/home/dan/Documents/projectv2/client/src/Stuff/AddChannel.js":"8","/home/dan/Documents/projectv2/client/src/components/CreateChannel.jsx":"9","/home/dan/Documents/projectv2/client/src/components/TeamMessage.jsx":"10","/home/dan/Documents/projectv2/client/src/components/ChannelOptions.jsx":"11","/home/dan/Documents/projectv2/client/src/components/ChannelInner.jsx":"12","/home/dan/Documents/projectv2/client/src/Stuff/CloseCreate.js":"13","/home/dan/Documents/projectv2/client/src/Stuff/ChannelInfo.js":"14","/home/dan/Documents/projectv2/client/src/components/UserList.jsx":"15","/home/dan/Documents/projectv2/client/src/Stuff/InviteIcon.js":"16","/home/dan/Documents/Untitled Folder/361Project1-master/client/src/index.js":"17","/home/dan/Documents/Untitled Folder/361Project1-master/client/src/App.jsx":"18","/home/dan/Documents/Untitled Folder/361Project1-master/client/src/components/ChatPage.jsx":"19","/home/dan/Documents/Untitled Folder/361Project1-master/client/src/components/Groups.jsx":"20","/home/dan/Documents/Untitled Folder/361Project1-master/client/src/components/GroupList.jsx":"21","/home/dan/Documents/Untitled Folder/361Project1-master/client/src/components/SignIn.jsx":"22","/home/dan/Documents/Untitled Folder/361Project1-master/client/src/Stuff/AddChannel.js":"23","/home/dan/Documents/Untitled Folder/361Project1-master/client/src/components/CreateChannel.jsx":"24","/home/dan/Documents/Untitled Folder/361Project1-master/client/src/components/TeamMessage.jsx":"25","/home/dan/Documents/Untitled Folder/361Project1-master/client/src/components/ChannelOptions.jsx":"26","/home/dan/Documents/Untitled Folder/361Project1-master/client/src/Stuff/CloseCreate.js":"27","/home/dan/Documents/Untitled Folder/361Project1-master/client/src/Stuff/ChannelInfo.js":"28","/home/dan/Documents/Untitled Folder/361Project1-master/client/src/components/ChatInner.jsx":"29","/home/dan/Documents/Untitled Folder/361Project1-master/client/src/components/InvitationList.jsx":"30"},{"size":224,"mtime":1637019369446,"results":"31","hashOfConfig":"32"},{"size":3004,"mtime":1637466162865,"results":"33","hashOfConfig":"32"},{"size":5557,"mtime":1637475749024,"results":"34","hashOfConfig":"32"},{"size":2408,"mtime":1637475217220,"results":"35","hashOfConfig":"32"},{"size":6239,"mtime":1637476774592,"results":"36","hashOfConfig":"32"},{"size":1578,"mtime":1637475700063,"results":"37","hashOfConfig":"32"},{"size":468,"mtime":1637026189328,"results":"38","hashOfConfig":"32"},{"size":734,"mtime":1637186192775,"results":"39","hashOfConfig":"32"},{"size":3703,"mtime":1637476090412,"results":"40","hashOfConfig":"32"},{"size":2206,"mtime":1637482025371,"results":"41","hashOfConfig":"32"},{"size":4602,"mtime":1637471055826,"results":"42","hashOfConfig":"32"},{"size":3815,"mtime":1637470208481,"results":"43","hashOfConfig":"32"},{"size":825,"mtime":1637188446702,"results":"44","hashOfConfig":"32"},{"size":757,"mtime":1637222571965,"results":"45","hashOfConfig":"32"},{"size":5164,"mtime":1637483696635,"results":"46","hashOfConfig":"32"},{"size":1114,"mtime":1637195357787,"results":"47","hashOfConfig":"32"},{"size":258,"mtime":1638497419389,"results":"48","hashOfConfig":"49"},{"size":3708,"mtime":1638516792342,"results":"50","hashOfConfig":"49"},{"size":1842,"mtime":1638523073527,"results":"51","hashOfConfig":"49"},{"size":2450,"mtime":1638513335880,"results":"52","hashOfConfig":"49"},{"size":6410,"mtime":1638513129724,"results":"53","hashOfConfig":"49"},{"size":6943,"mtime":1638513852520,"results":"54","hashOfConfig":"49"},{"size":945,"mtime":1638507035546,"results":"55","hashOfConfig":"49"},{"size":4706,"mtime":1638523280937,"results":"56","hashOfConfig":"49"},{"size":2565,"mtime":1638523351526,"results":"57","hashOfConfig":"49"},{"size":5171,"mtime":1638523204856,"results":"58","hashOfConfig":"49"},{"size":1152,"mtime":1638510991240,"results":"59","hashOfConfig":"49"},{"size":689,"mtime":1638508040214,"results":"60","hashOfConfig":"49"},{"size":4944,"mtime":1638522982234,"results":"61","hashOfConfig":"49"},{"size":5910,"mtime":1638523165556,"results":"62","hashOfConfig":"49"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"12uut2j",{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"iqfogk",{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"98"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"98"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"98"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/dan/Documents/projectv2/client/src/index.js",[],["128","129"],"/home/dan/Documents/projectv2/client/src/App.jsx",["130"],"/home/dan/Documents/projectv2/client/src/components/GroupList.jsx",["131","132","133"],"/home/dan/Documents/projectv2/client/src/components/ChatPage.jsx",["134"],"/home/dan/Documents/projectv2/client/src/components/SignIn.jsx",["135"],"/home/dan/Documents/projectv2/client/src/components/Groups.jsx",[],"/home/dan/Documents/projectv2/client/src/Stuff/SearchIcon.js",[],"/home/dan/Documents/projectv2/client/src/Stuff/AddChannel.js",[],"/home/dan/Documents/projectv2/client/src/components/CreateChannel.jsx",[],"/home/dan/Documents/projectv2/client/src/components/TeamMessage.jsx",["136","137","138","139","140","141","142"],"/home/dan/Documents/projectv2/client/src/components/ChannelOptions.jsx",["143","144"],"/home/dan/Documents/projectv2/client/src/components/ChannelInner.jsx",["145","146"],"/home/dan/Documents/projectv2/client/src/Stuff/CloseCreate.js",[],"/home/dan/Documents/projectv2/client/src/Stuff/ChannelInfo.js",[],"/home/dan/Documents/projectv2/client/src/components/UserList.jsx",["147","148","149"],"/home/dan/Documents/projectv2/client/src/Stuff/InviteIcon.js",[],"/home/dan/Documents/Untitled Folder/361Project1-master/client/src/index.js",[],["150","151"],"/home/dan/Documents/Untitled Folder/361Project1-master/client/src/App.jsx",["152"],"import './App.css';\nimport {StreamChat} from 'stream-chat'\nimport Cookies from 'universal-cookie'\nimport { Chat } from 'stream-chat-react' //The Main wrapper for all the stream api Channel shenanigans we are using\nimport { useState } from 'react';\n//THis is what styles the components of Stream Chat. If the styles look professional anywhere its this\nimport 'stream-chat-react/dist/css/index.css'\n\n\n//where we import our components into the program\nimport ChatPage from './components/ChatPage' \nimport GroupList from './components/GroupList'\nimport Groups from './components/Groups';\nimport SignIn from './components/SignIn';\n\n\n//Our API key for stream chat, we use the stream chat to get and instance of it to hoist into the chat client\nvar streamKey='7z6fubsdagca'\n//cookies instance\nvar cookies = new Cookies();\n//if were signed in, cookies should gave a authorization token\nvar userSignedIn = cookies.get(\"token\");\n\n//get our stream chat instance by passing stream chat our api key\nvar instance = StreamChat.getInstance(streamKey)\n//if we have an auth token, we can our cookie info info to the stream instance to get our users pertinent stuff\nif(userSignedIn) {\n  instance.connectUser({\n      token : cookies.get('token'),\n      name: cookies.get('username'),\n      fullName: cookies.get('fullname'),\n      id: cookies.get('userId'),\n      hashedPassword: cookies.get('hashedPassword')\n  }, userSignedIn)\n}\nconsole.log(userSignedIn)\n\n// The main componenet we put into the html document\nfunction App() {\n  // If we set this state to true, we want the chat page to show the create channel page\n  const [newChannel, setNewChannel] = useState(false)\n  //  if we set this to true, we want the channel options to open\n  const [openOptions, setOpenOptions] = useState(false)\n  // If were using a Team messanger or a direct message (for when editing/creating channels)\n  const [createType, setCreateType] = useState('')\n  \n\n  // if no users are signed in, we want the sign in component so we can get a users information\n  if(userSignedIn == null)\n  { \n    return <SignIn /> \n  }\n  //Return the main chat application, with the sidebar grouplist and the main chat page\n  // we pass them the functions needed to change states to open different windows and options\n  return (\n    // our main app page consists of two components. The sidebar on the left, and the chat page on the right. These different\n    // components need different usestate props to open and close different menus pertinenet to them. We render them bellow\n    // wrapped in the chat client instance so that we can grab contexts in the future.\n    //The most powerful wrapper \n    <div className=\"eminmen\"> \n{/* chat is a component from stream api that wraps the application. Provides \"chat context to childrem including StreamChat client isntance\" \n    https://getstream.io/chat/docs/sdk/react/core-components/chat/ */}\n      <Chat \n      client = {instance} \n      theme='team light'>\n            {/* Render the sidebar, pass it the icons required to change states via side buttons */}\n            <GroupList\n              newChannel={newChannel}\n              setCreateType={setCreateType}\n              setNewChannel={setNewChannel}\n              setOpenOptions={setOpenOptions}\n              openOptions={openOptions}\n            />\n            {/* Render the main chat container, also has options to state changing options pertinent to it */}\n            <ChatPage\n              newChannel={newChannel}\n              openOptions={openOptions}\n              setNewChannel={setNewChannel}\n              setOpenOptions={setOpenOptions}\n              createType={createType}\n            />\n      </Chat>\n    </div>\n  );\n\n}\n\nexport default App;\n","/home/dan/Documents/Untitled Folder/361Project1-master/client/src/components/ChatPage.jsx",["153"],"/home/dan/Documents/Untitled Folder/361Project1-master/client/src/components/Groups.jsx",["154","155","156","157"],"import React from 'react'\nimport {AddChannel} from '../Stuff/AddChannel'\n\n\n// We get the props from the api here, as well as type and state functions\nfunction Groups ({children, error = false, loading, type, setNewChannel, setCreateType, newChannel, openOptions, setOpenOptions}) {\n    // If we get an error from the API channelList, we display the following\n    if(error == true) {\n        if (type === 'team'){\n            return (\n            <div>\n                    Connection Error! Try again later\n            </div>)\n        }\n        else{\n            return \n        }\n    }\n    // If we our currently loading our group list, we tell the user\n    if(loading == true){\n        return (\n            <div>\n                    loading, please wait...\n            </div>\n        )\n    }\n    // We return the correct title and add button for the channel list we are generating with this component\n    // We add the tooltip code as well. We pass the correct props to the new channel button we embed into the header\n    // finally, we render the preview components that go with this list.\n    return (\n        <div>\n            <div>\n                <p>\n                    {type == 'team' ? 'Channels' : 'Direct Messages'}\n                </p>\n                Add New:\n                <div  className={`addButtonHolder_${type === 'team' ? 'Channels' : 'DirectMessages'}`}> \n                <span className={`addToolTip_${type === 'team' ? 'Channels' : 'DirectMessages'}`}> Click here to create a group with members </span>\n               \n                {/* Svg to add channel, takes options functions and manipulates them based on attributes (onlclick) works for both\n                dms and channels. This is accomplished by setting type based upon type passed to groups component */}\n                <AddChannel\n                    type ={\n                            type == \"team\" ? \"team\" : \"messaging\"\n                        }\n                    setNewChannel={setNewChannel}\n                    newChannel={newChannel}\n                    setOpenOptions={setOpenOptions}\n                    openOptions={openOptions}\n                    setCreateType={setCreateType} \n                />\n                </div>\n            </div>\n            {/* Renders the actual channels in our groups component, the components are passed for us by stream-chat in GroupList*/}\n            {children}\n            </div>\n    )\n}\n\nexport default Groups\n","/home/dan/Documents/Untitled Folder/361Project1-master/client/src/components/GroupList.jsx",["158","159","160"],"import React from 'react'\nimport Cookies from 'universal-cookie';\nimport { useChatContext } from 'stream-chat-react'\nimport { ChannelList } from 'stream-chat-react'\n\nimport icon1 from '../Stuff/icon1.png'\nimport icon2 from '../Stuff/icon2.png'\nimport icon3 from '../Stuff/icon3.png'\nimport Groups from './Groups';\nconst cookies = new Cookies();\n\n// component container style\n\n//Style for the header at the top of groupList\nvar ListHeaderStyle = {\n    color: 'red',\n    padding: \"0 20px\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n\n  };\n\n// Function returns the header of the groups side bar \nfunction ListHeader(){ \n    return (\n    <div style={ListHeaderStyle}>\n        <h2>Groups:</h2>\n    </div>\n    )\n}\n// function holds the image icons in the sidebars buttonbar. Buttons are chat icon, options Cog, and logout symbol\nfunction IconsHolder({logout, opts}) {\n    return (\n    <div className=\"icon_side_container\">\n        <div className=\"icon1\">\n            <img className ='iconimg1' \n            src={icon1} \n            width=\"32\"/>\n        </div>\n        <div className=\"icon2\" onClick={opts}>\n            <span className=\"optionsTooltip\"> Click here to open options for currently open channel</span>\n            <img className='options' \n            src={icon3}  \n            width=\"32\"/>\n        </div>\n        <div className=\"icon3\" onClick={logout}>\n            <span className=\"optionsTooltip2\"> Click here to logout and return to the sign in screen</span>\n            <img className='iconimg2' \n            src={icon2} \n            width=\"32\"/>\n        </div>\n    </div>\n    )\n}\n//custom filters for the stream chat ChannelList object, returns channels where type is eam\nfunction channelFilter(channels){\n    return channels.filter((channel) => channel.type === 'team' ) // Return channels where the type is team\n}\n//custom filters for the stream chat ChannelList object, returns channels where type is messaging\nfunction messageFilter(channels){\n    return channels.filter((channel) => channel.type === 'messaging' ) // Return channels where the type is team\n}\n\n// We have our icon bar that we render, we then place the group container header and holder. We use the stream API\n// ChannelList component to display channels, but we create our own group list component of which we pass to the \n// api's channel component as a function of the listProp prop\n// Preview and Group list are optional, if not provided, stream chat provides its own channel list (we use a custom group list(groups))\n// because the built in stream chat component looks very bad and doesnt have add buttons in it.\n// First preview shows groups, the second shows direct messaging\nfunction GroupList({setNewChannel, setCreateType, newChannel, setOpenOptions, openOptions }){\n    const { client} = useChatContext();\n// toggle options state on off with the cog symbol\n    function opts() {\n        setOpenOptions(!openOptions)\n    }\n//to logout, we simply clear the cookies. The login page in app.jsx will now trigger, reinitiating sign in\n    function logout(){\n        cookies.remove('username');\n        cookies.remove('fullname');\n        cookies.remove('token');\n        cookies.remove('userId');\n        cookies.remove('hashedPassword');\n\n        //reload Dr.Freeman\n        window.location.reload();\n    }\n// Filter out channels that don't have the user as a member (get users channels)\n    const filters = { \n        members:{$in: [client.userID]} //Get all channels where our current user is in it\n    } \n\n// return the components and there props to form our main grouplist sidebar component\n// Use stream chats channel list to render channels based upon user membership and team/DM, custom props for filters and display\n// format Use our own Groups(header) list component for buttons, use stream chats preview components (works great)\n// Pass render icon buttons, and functions required to change the chatpage state\n    return (\n        <>\n        {/* Render iconholder with the pertinenet state functions */}\n           <IconsHolder logout={logout} opts={opts} />\n            <div className =\"group-list-wrapper\"> \n               <ListHeader />\n                {/* API info at https://getstream.io/chat/docs/sdk/reactnative/core-components/channel-list/\n                Channel list Component from streamchat, we tell it what channels we want, \n                first filter gets us channels with the user in it, render filter gets us the team/message channels\n                of such channels. Setting the list prop to something overides default stream-Chat list from appearing \n                List prop takes a function that takes the default list props from stream chat component and passes it to our custom\n                groups component. The children are the list items generated for us by stream chat, we also pass other state functions\n                so we can manipulate various option states.\n                */}\n               <ChannelList\n                    filters={filters}\n                    GroupList   channelRenderFilterFn={channelFilter}\n                    \n                    List={(listProps) => (\n                        <Groups \n                            {...listProps}\n                            type=\"team\"\n                            setNewChannel={setNewChannel}\n                            setCreateType={setCreateType} \n                            newChannel={newChannel}\n                            setOpenOptions={setOpenOptions}\n                            openOptions={openOptions}\n                        />\n                    )}\n               />\n                {/* Same as above, but the filter is for DMS instead of groups */}\n               <ChannelList\n                    filters={filters}\n                    channelRenderFilterFn={messageFilter}\n                    List={(listProps) => (\n                        <Groups \n                            {...listProps}\n                            type=\"messaging\"\n                            setNewChannel={setNewChannel}\n                            setCreateType={setCreateType} \n                            newChannel={newChannel}\n                            setOpenOptions={setOpenOptions}\n                            openOptions={openOptions}\n                        />\n                    )}\n               />\n            </div>\n        </>\n    )\n}\nexport default GroupList\n","/home/dan/Documents/Untitled Folder/361Project1-master/client/src/components/SignIn.jsx",[],"/home/dan/Documents/Untitled Folder/361Project1-master/client/src/Stuff/AddChannel.js",[],"/home/dan/Documents/Untitled Folder/361Project1-master/client/src/components/CreateChannel.jsx",[],"/home/dan/Documents/Untitled Folder/361Project1-master/client/src/components/TeamMessage.jsx",["161","162","163","164","165","166","167"],"/home/dan/Documents/Untitled Folder/361Project1-master/client/src/components/ChannelOptions.jsx",["168","169"],"/home/dan/Documents/Untitled Folder/361Project1-master/client/src/Stuff/CloseCreate.js",[],"/home/dan/Documents/Untitled Folder/361Project1-master/client/src/Stuff/ChannelInfo.js",[],"/home/dan/Documents/Untitled Folder/361Project1-master/client/src/components/ChatInner.jsx",["170"],"/home/dan/Documents/Untitled Folder/361Project1-master/client/src/components/InvitationList.jsx",["171","172","173"],{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":13,"column":8,"nodeType":"180","messageId":"181","endLine":13,"endColumn":14},{"ruleId":"178","severity":1,"message":"182","line":1,"column":27,"nodeType":"180","messageId":"181","endLine":1,"endColumn":36},{"ruleId":"178","severity":1,"message":"183","line":132,"column":11,"nodeType":"180","messageId":"181","endLine":132,"endColumn":26},{"ruleId":"178","severity":1,"message":"184","line":132,"column":28,"nodeType":"180","messageId":"181","endLine":132,"endColumn":46},{"ruleId":"178","severity":1,"message":"185","line":39,"column":13,"nodeType":"180","messageId":"181","endLine":39,"endColumn":20},{"ruleId":"178","severity":1,"message":"186","line":57,"column":7,"nodeType":"180","messageId":"181","endLine":57,"endColumn":20},{"ruleId":"178","severity":1,"message":"187","line":2,"column":10,"nodeType":"180","messageId":"181","endLine":2,"endColumn":21},{"ruleId":"178","severity":1,"message":"188","line":9,"column":13,"nodeType":"180","messageId":"181","endLine":9,"endColumn":29},{"ruleId":"189","severity":1,"message":"190","line":20,"column":17,"nodeType":"191","messageId":"192","endLine":20,"endColumn":19},{"ruleId":"189","severity":1,"message":"190","line":20,"column":36,"nodeType":"191","messageId":"192","endLine":20,"endColumn":38},{"ruleId":"189","severity":1,"message":"190","line":20,"column":56,"nodeType":"191","messageId":"192","endLine":20,"endColumn":58},{"ruleId":"189","severity":1,"message":"190","line":20,"column":79,"nodeType":"191","messageId":"192","endLine":20,"endColumn":81},{"ruleId":"193","severity":1,"message":"194","line":58,"column":52,"nodeType":"195","endLine":58,"endColumn":98},{"ruleId":"189","severity":1,"message":"196","line":87,"column":25,"nodeType":"191","messageId":"192","endLine":87,"endColumn":27},{"ruleId":"189","severity":1,"message":"190","line":91,"column":25,"nodeType":"191","messageId":"192","endLine":91,"endColumn":27},{"ruleId":"189","severity":1,"message":"190","line":57,"column":21,"nodeType":"191","messageId":"192","endLine":57,"endColumn":23},{"ruleId":"178","severity":1,"message":"197","line":84,"column":11,"nodeType":"180","messageId":"181","endLine":84,"endColumn":18},{"ruleId":"178","severity":1,"message":"198","line":2,"column":9,"nodeType":"180","messageId":"181","endLine":2,"endColumn":23},{"ruleId":"189","severity":1,"message":"190","line":65,"column":20,"nodeType":"191","messageId":"192","endLine":65,"endColumn":22},{"ruleId":"199","severity":1,"message":"200","line":131,"column":7,"nodeType":"201","endLine":131,"endColumn":9,"suggestions":"202"},{"ruleId":"174","replacedBy":"203"},{"ruleId":"176","replacedBy":"204"},{"ruleId":"178","severity":1,"message":"179","line":13,"column":8,"nodeType":"180","messageId":"181","endLine":13,"endColumn":14},{"ruleId":"178","severity":1,"message":"185","line":20,"column":13,"nodeType":"180","messageId":"181","endLine":20,"endColumn":20},{"ruleId":"189","severity":1,"message":"190","line":8,"column":14,"nodeType":"191","messageId":"192","endLine":8,"endColumn":16},{"ruleId":"189","severity":1,"message":"190","line":20,"column":16,"nodeType":"191","messageId":"192","endLine":20,"endColumn":18},{"ruleId":"189","severity":1,"message":"190","line":34,"column":27,"nodeType":"191","messageId":"192","endLine":34,"endColumn":29},{"ruleId":"189","severity":1,"message":"190","line":44,"column":34,"nodeType":"191","messageId":"192","endLine":44,"endColumn":36},{"ruleId":"193","severity":1,"message":"194","line":37,"column":13,"nodeType":"195","endLine":39,"endColumn":25},{"ruleId":"193","severity":1,"message":"194","line":43,"column":13,"nodeType":"195","endLine":45,"endColumn":25},{"ruleId":"193","severity":1,"message":"194","line":49,"column":13,"nodeType":"195","endLine":51,"endColumn":25},{"ruleId":"189","severity":1,"message":"190","line":22,"column":17,"nodeType":"191","messageId":"192","endLine":22,"endColumn":19},{"ruleId":"189","severity":1,"message":"190","line":22,"column":36,"nodeType":"191","messageId":"192","endLine":22,"endColumn":38},{"ruleId":"189","severity":1,"message":"190","line":22,"column":56,"nodeType":"191","messageId":"192","endLine":22,"endColumn":58},{"ruleId":"189","severity":1,"message":"190","line":22,"column":79,"nodeType":"191","messageId":"192","endLine":22,"endColumn":81},{"ruleId":"189","severity":1,"message":"190","line":54,"column":59,"nodeType":"191","messageId":"192","endLine":54,"endColumn":61},{"ruleId":"189","severity":1,"message":"190","line":55,"column":51,"nodeType":"191","messageId":"192","endLine":55,"endColumn":53},{"ruleId":"193","severity":1,"message":"194","line":60,"column":52,"nodeType":"195","endLine":60,"endColumn":98},{"ruleId":"189","severity":1,"message":"196","line":88,"column":25,"nodeType":"191","messageId":"192","endLine":88,"endColumn":27},{"ruleId":"189","severity":1,"message":"190","line":92,"column":25,"nodeType":"191","messageId":"192","endLine":92,"endColumn":27},{"ruleId":"189","severity":1,"message":"190","line":65,"column":21,"nodeType":"191","messageId":"192","endLine":65,"endColumn":23},{"ruleId":"178","severity":1,"message":"198","line":2,"column":9,"nodeType":"180","messageId":"181","endLine":2,"endColumn":23},{"ruleId":"189","severity":1,"message":"190","line":78,"column":20,"nodeType":"191","messageId":"192","endLine":78,"endColumn":22},{"ruleId":"199","severity":1,"message":"205","line":141,"column":7,"nodeType":"201","endLine":141,"endColumn":9,"suggestions":"206"},"no-native-reassign",["207"],"no-negated-in-lhs",["208"],"no-unused-vars","'Groups' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'toggleContainer' is assigned a value but never used.","'setToggleContainer' is assigned a value but never used.","'channel' is assigned a value but never used.","'initialFields' is assigned a value but never used.","'MessageTeam' is defined but never used.","'handleOpenThread' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Expected '!==' and instead saw '!='.","'members' is assigned a value but never used.","'useChatChannel' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'client' and 'loading'. Either include them or remove the dependency array.","ArrayExpression",["209"],["207"],["208"],"React Hook useEffect has missing dependencies: 'client' and 'loadingList'. Either include them or remove the dependency array.",["210"],"no-global-assign","no-unsafe-negation",{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},"Update the dependencies array to be: [client, loading]",{"range":"215","text":"216"},"Update the dependencies array to be: [client, loadingList]",{"range":"217","text":"218"},[4422,4424],"[client, loading]",[5344,5346],"[client, loadingList]"]